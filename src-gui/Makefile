# Makefile.in generated by automake 1.16.1 from Makefile.am.
# src-gui/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Makefile.am -- Template for generating Makefile via Automake.
# Copyright (C) 2006-2018 PUC-Rio/Laboratorio TeleMidia
#
# This file is part of Ginga (Ginga-NCL).
#
# Ginga is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# Ginga is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Ginga.  If not, see <https://www.gnu.org/licenses/>.

# Makefile.am.common -- Common declarations.
# Copyright (C) 2013-2016 Free Software Foundation, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.


am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/ginga
pkgincludedir = $(includedir)/ginga
pkglibdir = $(libdir)/ginga
pkglibexecdir = $(libexecdir)/ginga
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
bin_PROGRAMS = gingagui$(EXEEXT)
subdir = src-gui
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps =  \
	$(top_srcdir)/build-aux/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/build-aux/libtool.m4 \
	$(top_srcdir)/build-aux/ltoptions.m4 \
	$(top_srcdir)/build-aux/ltsugar.m4 \
	$(top_srcdir)/build-aux/ltversion.m4 \
	$(top_srcdir)/build-aux/lt~obsolete.m4 \
	$(top_srcdir)/build-aux/manywarnings.m4 \
	$(top_srcdir)/build-aux/perl.m4 \
	$(top_srcdir)/build-aux/util.m4 \
	$(top_srcdir)/build-aux/warnings.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/lib/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am__dirstamp = $(am__leading_dot)dirstamp
am_gingagui_OBJECTS = gingagui-ginga-gtk.$(OBJEXT) \
	model/gingagui-SaveLoadSettings.$(OBJEXT) \
	model/gingagui-HttpMessage.$(OBJEXT) \
	view/gingagui-TrackerWindow.$(OBJEXT) \
	view/gingagui-AboutWindow.$(OBJEXT) \
	view/gingagui-HelpWindow.$(OBJEXT) \
	view/gingagui-Draw.$(OBJEXT) \
	view/gingagui-FullscreenWindow.$(OBJEXT) \
	view/gingagui-MainWindow.$(OBJEXT) \
	view/gingagui-BigPictureWindow.$(OBJEXT) \
	view/gingagui-TvControlWindow.$(OBJEXT)
gingagui_OBJECTS = $(am_gingagui_OBJECTS)
gingagui_DEPENDENCIES = $(top_builddir)/lib/libginga.la
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
gingagui_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(gingagui_CXXFLAGS) \
	$(CXXFLAGS) $(gingagui_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/lib
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade = ./$(DEPDIR)/gingagui-ginga-gtk.Po \
	model/$(DEPDIR)/gingagui-HttpMessage.Po \
	model/$(DEPDIR)/gingagui-SaveLoadSettings.Po \
	view/$(DEPDIR)/gingagui-AboutWindow.Po \
	view/$(DEPDIR)/gingagui-BigPictureWindow.Po \
	view/$(DEPDIR)/gingagui-Draw.Po \
	view/$(DEPDIR)/gingagui-FullscreenWindow.Po \
	view/$(DEPDIR)/gingagui-HelpWindow.Po \
	view/$(DEPDIR)/gingagui-MainWindow.Po \
	view/$(DEPDIR)/gingagui-TrackerWindow.Po \
	view/$(DEPDIR)/gingagui-TvControlWindow.Po
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(gingagui_SOURCES)
DIST_SOURCES = $(gingagui_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive cscopelist-recursive \
	ctags-recursive dvi-recursive html-recursive info-recursive \
	install-data-recursive install-dvi-recursive \
	install-exec-recursive install-html-recursive \
	install-info-recursive install-pdf-recursive \
	install-ps-recursive install-recursive installcheck-recursive \
	installdirs-recursive pdf-recursive ps-recursive \
	tags-recursive uninstall-recursive
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
am__recursive_targets = \
  $(RECURSIVE_TARGETS) \
  $(RECURSIVE_CLEAN_TARGETS) \
  $(am__extra_recursive_targets)
AM_RECURSIVE_TARGETS = $(am__recursive_targets:-recursive=) TAGS CTAGS \
	distdir distdir-am
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/build-aux/Makefile.am.common \
	$(top_srcdir)/build-aux/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/marina/Documentos/git/mulsemediaformatter/build-aux/missing aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AS = as
AUTOCONF = ${SHELL} /home/marina/Documentos/git/mulsemediaformatter/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/marina/Documentos/git/mulsemediaformatter/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/marina/Documentos/git/mulsemediaformatter/build-aux/missing automake-1.16
AWK = mawk
CAIRO_CFLAGS = -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16
CAIRO_LIBS = -lcairo
CAIRO_REQUIRED_VERSION = 1.10.2
CC = gcc
CCDEPMODE = depmode=gcc3
CEF_CFLAGS = 
CEF_LIBS = 
CEF_REQUIRED_VERSION = 3.0
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GENHTML = 
GINGA_ALL_CXXFLAGS =     -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16  -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -pthread -I/usr/include/gstreamer-1.0 -I/usr/include/orc-0.4 -I/usr/include/gstreamer-1.0 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -pthread -I/usr/include/gtk-3.0 -I/usr/include/at-spi2-atk/2.0 -I/usr/include/at-spi-2.0 -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include -I/usr/include/gtk-3.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/cairo -I/usr/include/libdrm -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/fribidi -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -pthread -I/usr/include/librsvg-2.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/libxml2 -I/usr/include/lua5.3   -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/fribidi -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16 -pthread -I/usr/include/libsoup-2.4 -I/usr/include/libxml2 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
GINGA_ALL_LDFLAGS =  -lcairo  -lglib-2.0 -lgstvideo-1.0 -lgstaudio-1.0 -lgstapp-1.0 -lgstbase-1.0 -lgstreamer-1.0 -lgobject-2.0 -lglib-2.0 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 -lrsvg-2 -lm -lgio-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 -lcairo -lxml2 -llua5.3 -export-dynamic   -lpangocairo-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lcairo -lsoup-2.4 -lgio-2.0 -lgobject-2.0 -lglib-2.0
GINGA_LIBTOOL_AGE = 0
GINGA_LIBTOOL_CURRENT = 0
GINGA_LIBTOOL_CURRENT_MINUS_AGE = 0
GINGA_LIBTOOL_REVISION = 0
GINGA_LIBTOOL_STRING = 0:0:0
GINGA_VERSION_MAJOR = 0
GINGA_VERSION_MICRO = 0
GINGA_VERSION_MINOR = 0
GINGA_VERSION_STRING = UNKNOWN
GLIB_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
GLIB_LIBS = -lglib-2.0
GLIB_REQUIRED_VERSION = 2.32.4
GREP = /bin/grep
GSTREAMER_CFLAGS = -pthread -I/usr/include/gstreamer-1.0 -I/usr/include/orc-0.4 -I/usr/include/gstreamer-1.0 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
GSTREAMER_LIBS = -lgstvideo-1.0 -lgstaudio-1.0 -lgstapp-1.0 -lgstbase-1.0 -lgstreamer-1.0 -lgobject-2.0 -lglib-2.0
GSTREAMER_REQUIRED_VERSION = 1.2.0
GTK_CFLAGS = -pthread -I/usr/include/gtk-3.0 -I/usr/include/at-spi2-atk/2.0 -I/usr/include/at-spi-2.0 -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include -I/usr/include/gtk-3.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/cairo -I/usr/include/libdrm -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/fribidi -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0
GTK_REQUIRED_VERSION = 3.4.2
HAVE_CXX11 = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LCOV = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBM = -lm
LIBOBJS = 
LIBRSVG_CFLAGS = -pthread -I/usr/include/librsvg-2.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16
LIBRSVG_LIBS = -lrsvg-2 -lm -lgio-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 -lcairo
LIBRSVG_REQUIRED_VERSION = 2.40.0
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBXML_CFLAGS = -I/usr/include/libxml2
LIBXML_LIBS = -lxml2
LIBXML_REQUIRED_VERSION = 2.9
LIB_EXE_MACHINE_FLAG = 
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_MODULE_LDFLAGS = -shared -avoid-version
LT_SYS_LIBRARY_PATH = 
LUA_CFLAGS = -I/usr/include/lua5.3
LUA_LIBS = -llua5.3 -export-dynamic
LUA_REQUIRED_VERSION = 3.0
LUA_VERSION = 5.3
M4 = m4
MAKEINFO = ${SHELL} /home/marina/Documentos/git/mulsemediaformatter/build-aux/missing makeinfo
MANIFEST_TOOL = :
MINGW_ROOT = 
MKDIR_P = /bin/mkdir -p
NCLUA_CFLAGS = 
NCLUA_LIBS = 
NCLUA_REQUIRED_VERSION = 1.0
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OPENGL_CFLAGS = 
OPENGL_LIBS = 
OPENGL_REQUIRED_VERSION = 17.0
OTOOL = 
OTOOL64 = 
PACKAGE = ginga
PACKAGE_BUGREPORT = bugs@telemidia.puc-rio.br
PACKAGE_NAME = Ginga
PACKAGE_STRING = Ginga UNKNOWN
PACKAGE_TARNAME = ginga
PACKAGE_URL = http://github.com/TeleMidia/ginga
PACKAGE_VERSION = UNKNOWN
PANGO_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/fribidi -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/uuid -I/usr/include/freetype2 -I/usr/include/libpng16
PANGO_LIBS = -lpangocairo-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lcairo
PANGO_REQUIRED_VERSION = 1.30.0
PATH_SEPARATOR = :
PERL = perl
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SHTOOL = 
SOEXT = .so
SOUP_CFLAGS = -pthread -I/usr/include/libsoup-2.4 -I/usr/include/libxml2 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
SOUP_LIBS = -lsoup-2.4 -lgio-2.0 -lgobject-2.0 -lglib-2.0
SOUP_REQUIRED_VERSION = 2.42
STRIP = strip
VALGRIND = 
VERSION = UNKNOWN
WARN_CFLAGS = 
WERROR_CFLAGS = 
WINDRES = 
abs_builddir = /home/marina/Documentos/git/mulsemediaformatter/src-gui
abs_srcdir = /home/marina/Documentos/git/mulsemediaformatter/src-gui
abs_top_builddir = /home/marina/Documentos/git/mulsemediaformatter
abs_top_srcdir = /home/marina/Documentos/git/mulsemediaformatter
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
cef_dir = 
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
gingadatadir = ${datarootdir}/ginga
gingasysconfdir = ${prefix}/etc/ginga
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/marina/Documentos/git/mulsemediaformatter/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
luadatadir = ${datadir}/lua/5.3
lualibdir = ${libdir}/lua/5.3
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
ms_lib = 
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
CLEANDIRS = 
CLEANFILES = *.core *.gcda *.gcno vgcore.*
DISTCLEANFILES = 
EXTRA_DIST = 
MAINTAINERCLEANFILES = Makefile.in
SUBDIRS = icons style
AM_CPPFLAGS = -I$(top_srcdir)/lib -I$(top_builddir)/lib\
  -DGINGADATADIR=\"$(gingadatadir)\"

AM_CXXFLAGS = $(CAIRO_CFLAGS) $(GLIB_CFLAGS) $(GTK_CFLAGS) $(LIBXML_CFLAGS) $(SOUP_CFLAGS)
AM_LDFLAGS = $(CAIRO_LIBS) $(GLIB_LIBS) $(GTK_LIBS) $(LIBXML_LIBS) $(SOUP_LIBS)
gingagui_CXXFLAGS = $(AM_CXXFLAGS)
gingagui_LDADD = $(top_builddir)/lib/libginga.la
gingagui_LDFLAGS = $(AM_LDFLAGS)
gingagui_SOURCES = \
  ginga-gtk.cpp\
  model/SaveLoadSettings.cpp\
  model/HttpMessage.cpp\
  view/TrackerWindow.cpp\
  view/AboutWindow.cpp\
  view/HelpWindow.cpp\
  view/Draw.cpp\
  view/FullscreenWindow.cpp\
  view/MainWindow.cpp\
  view/BigPictureWindow.cpp\
  view/TvControlWindow.cpp\
  $(NULL)

all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/build-aux/Makefile.am.common $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src-gui/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src-gui/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(top_srcdir)/build-aux/Makefile.am.common $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	 || test -f $$p1 \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	    echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	    $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
model/$(am__dirstamp):
	@$(MKDIR_P) model
	@: > model/$(am__dirstamp)
model/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) model/$(DEPDIR)
	@: > model/$(DEPDIR)/$(am__dirstamp)
model/gingagui-SaveLoadSettings.$(OBJEXT): model/$(am__dirstamp) \
	model/$(DEPDIR)/$(am__dirstamp)
model/gingagui-HttpMessage.$(OBJEXT): model/$(am__dirstamp) \
	model/$(DEPDIR)/$(am__dirstamp)
view/$(am__dirstamp):
	@$(MKDIR_P) view
	@: > view/$(am__dirstamp)
view/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) view/$(DEPDIR)
	@: > view/$(DEPDIR)/$(am__dirstamp)
view/gingagui-TrackerWindow.$(OBJEXT): view/$(am__dirstamp) \
	view/$(DEPDIR)/$(am__dirstamp)
view/gingagui-AboutWindow.$(OBJEXT): view/$(am__dirstamp) \
	view/$(DEPDIR)/$(am__dirstamp)
view/gingagui-HelpWindow.$(OBJEXT): view/$(am__dirstamp) \
	view/$(DEPDIR)/$(am__dirstamp)
view/gingagui-Draw.$(OBJEXT): view/$(am__dirstamp) \
	view/$(DEPDIR)/$(am__dirstamp)
view/gingagui-FullscreenWindow.$(OBJEXT): view/$(am__dirstamp) \
	view/$(DEPDIR)/$(am__dirstamp)
view/gingagui-MainWindow.$(OBJEXT): view/$(am__dirstamp) \
	view/$(DEPDIR)/$(am__dirstamp)
view/gingagui-BigPictureWindow.$(OBJEXT): view/$(am__dirstamp) \
	view/$(DEPDIR)/$(am__dirstamp)
view/gingagui-TvControlWindow.$(OBJEXT): view/$(am__dirstamp) \
	view/$(DEPDIR)/$(am__dirstamp)

gingagui$(EXEEXT): $(gingagui_OBJECTS) $(gingagui_DEPENDENCIES) $(EXTRA_gingagui_DEPENDENCIES) 
	@rm -f gingagui$(EXEEXT)
	$(AM_V_CXXLD)$(gingagui_LINK) $(gingagui_OBJECTS) $(gingagui_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f model/*.$(OBJEXT)
	-rm -f view/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/gingagui-ginga-gtk.Po # am--include-marker
include model/$(DEPDIR)/gingagui-HttpMessage.Po # am--include-marker
include model/$(DEPDIR)/gingagui-SaveLoadSettings.Po # am--include-marker
include view/$(DEPDIR)/gingagui-AboutWindow.Po # am--include-marker
include view/$(DEPDIR)/gingagui-BigPictureWindow.Po # am--include-marker
include view/$(DEPDIR)/gingagui-Draw.Po # am--include-marker
include view/$(DEPDIR)/gingagui-FullscreenWindow.Po # am--include-marker
include view/$(DEPDIR)/gingagui-HelpWindow.Po # am--include-marker
include view/$(DEPDIR)/gingagui-MainWindow.Po # am--include-marker
include view/$(DEPDIR)/gingagui-TrackerWindow.Po # am--include-marker
include view/$(DEPDIR)/gingagui-TvControlWindow.Po # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

gingagui-ginga-gtk.o: ginga-gtk.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -MT gingagui-ginga-gtk.o -MD -MP -MF $(DEPDIR)/gingagui-ginga-gtk.Tpo -c -o gingagui-ginga-gtk.o `test -f 'ginga-gtk.cpp' || echo '$(srcdir)/'`ginga-gtk.cpp
	$(AM_V_at)$(am__mv) $(DEPDIR)/gingagui-ginga-gtk.Tpo $(DEPDIR)/gingagui-ginga-gtk.Po
#	$(AM_V_CXX)source='ginga-gtk.cpp' object='gingagui-ginga-gtk.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -c -o gingagui-ginga-gtk.o `test -f 'ginga-gtk.cpp' || echo '$(srcdir)/'`ginga-gtk.cpp

gingagui-ginga-gtk.obj: ginga-gtk.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -MT gingagui-ginga-gtk.obj -MD -MP -MF $(DEPDIR)/gingagui-ginga-gtk.Tpo -c -o gingagui-ginga-gtk.obj `if test -f 'ginga-gtk.cpp'; then $(CYGPATH_W) 'ginga-gtk.cpp'; else $(CYGPATH_W) '$(srcdir)/ginga-gtk.cpp'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/gingagui-ginga-gtk.Tpo $(DEPDIR)/gingagui-ginga-gtk.Po
#	$(AM_V_CXX)source='ginga-gtk.cpp' object='gingagui-ginga-gtk.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -c -o gingagui-ginga-gtk.obj `if test -f 'ginga-gtk.cpp'; then $(CYGPATH_W) 'ginga-gtk.cpp'; else $(CYGPATH_W) '$(srcdir)/ginga-gtk.cpp'; fi`

model/gingagui-SaveLoadSettings.o: model/SaveLoadSettings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -MT model/gingagui-SaveLoadSettings.o -MD -MP -MF model/$(DEPDIR)/gingagui-SaveLoadSettings.Tpo -c -o model/gingagui-SaveLoadSettings.o `test -f 'model/SaveLoadSettings.cpp' || echo '$(srcdir)/'`model/SaveLoadSettings.cpp
	$(AM_V_at)$(am__mv) model/$(DEPDIR)/gingagui-SaveLoadSettings.Tpo model/$(DEPDIR)/gingagui-SaveLoadSettings.Po
#	$(AM_V_CXX)source='model/SaveLoadSettings.cpp' object='model/gingagui-SaveLoadSettings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -c -o model/gingagui-SaveLoadSettings.o `test -f 'model/SaveLoadSettings.cpp' || echo '$(srcdir)/'`model/SaveLoadSettings.cpp

model/gingagui-SaveLoadSettings.obj: model/SaveLoadSettings.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -MT model/gingagui-SaveLoadSettings.obj -MD -MP -MF model/$(DEPDIR)/gingagui-SaveLoadSettings.Tpo -c -o model/gingagui-SaveLoadSettings.obj `if test -f 'model/SaveLoadSettings.cpp'; then $(CYGPATH_W) 'model/SaveLoadSettings.cpp'; else $(CYGPATH_W) '$(srcdir)/model/SaveLoadSettings.cpp'; fi`
	$(AM_V_at)$(am__mv) model/$(DEPDIR)/gingagui-SaveLoadSettings.Tpo model/$(DEPDIR)/gingagui-SaveLoadSettings.Po
#	$(AM_V_CXX)source='model/SaveLoadSettings.cpp' object='model/gingagui-SaveLoadSettings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -c -o model/gingagui-SaveLoadSettings.obj `if test -f 'model/SaveLoadSettings.cpp'; then $(CYGPATH_W) 'model/SaveLoadSettings.cpp'; else $(CYGPATH_W) '$(srcdir)/model/SaveLoadSettings.cpp'; fi`

model/gingagui-HttpMessage.o: model/HttpMessage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -MT model/gingagui-HttpMessage.o -MD -MP -MF model/$(DEPDIR)/gingagui-HttpMessage.Tpo -c -o model/gingagui-HttpMessage.o `test -f 'model/HttpMessage.cpp' || echo '$(srcdir)/'`model/HttpMessage.cpp
	$(AM_V_at)$(am__mv) model/$(DEPDIR)/gingagui-HttpMessage.Tpo model/$(DEPDIR)/gingagui-HttpMessage.Po
#	$(AM_V_CXX)source='model/HttpMessage.cpp' object='model/gingagui-HttpMessage.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -c -o model/gingagui-HttpMessage.o `test -f 'model/HttpMessage.cpp' || echo '$(srcdir)/'`model/HttpMessage.cpp

model/gingagui-HttpMessage.obj: model/HttpMessage.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -MT model/gingagui-HttpMessage.obj -MD -MP -MF model/$(DEPDIR)/gingagui-HttpMessage.Tpo -c -o model/gingagui-HttpMessage.obj `if test -f 'model/HttpMessage.cpp'; then $(CYGPATH_W) 'model/HttpMessage.cpp'; else $(CYGPATH_W) '$(srcdir)/model/HttpMessage.cpp'; fi`
	$(AM_V_at)$(am__mv) model/$(DEPDIR)/gingagui-HttpMessage.Tpo model/$(DEPDIR)/gingagui-HttpMessage.Po
#	$(AM_V_CXX)source='model/HttpMessage.cpp' object='model/gingagui-HttpMessage.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -c -o model/gingagui-HttpMessage.obj `if test -f 'model/HttpMessage.cpp'; then $(CYGPATH_W) 'model/HttpMessage.cpp'; else $(CYGPATH_W) '$(srcdir)/model/HttpMessage.cpp'; fi`

view/gingagui-TrackerWindow.o: view/TrackerWindow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -MT view/gingagui-TrackerWindow.o -MD -MP -MF view/$(DEPDIR)/gingagui-TrackerWindow.Tpo -c -o view/gingagui-TrackerWindow.o `test -f 'view/TrackerWindow.cpp' || echo '$(srcdir)/'`view/TrackerWindow.cpp
	$(AM_V_at)$(am__mv) view/$(DEPDIR)/gingagui-TrackerWindow.Tpo view/$(DEPDIR)/gingagui-TrackerWindow.Po
#	$(AM_V_CXX)source='view/TrackerWindow.cpp' object='view/gingagui-TrackerWindow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -c -o view/gingagui-TrackerWindow.o `test -f 'view/TrackerWindow.cpp' || echo '$(srcdir)/'`view/TrackerWindow.cpp

view/gingagui-TrackerWindow.obj: view/TrackerWindow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -MT view/gingagui-TrackerWindow.obj -MD -MP -MF view/$(DEPDIR)/gingagui-TrackerWindow.Tpo -c -o view/gingagui-TrackerWindow.obj `if test -f 'view/TrackerWindow.cpp'; then $(CYGPATH_W) 'view/TrackerWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/view/TrackerWindow.cpp'; fi`
	$(AM_V_at)$(am__mv) view/$(DEPDIR)/gingagui-TrackerWindow.Tpo view/$(DEPDIR)/gingagui-TrackerWindow.Po
#	$(AM_V_CXX)source='view/TrackerWindow.cpp' object='view/gingagui-TrackerWindow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -c -o view/gingagui-TrackerWindow.obj `if test -f 'view/TrackerWindow.cpp'; then $(CYGPATH_W) 'view/TrackerWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/view/TrackerWindow.cpp'; fi`

view/gingagui-AboutWindow.o: view/AboutWindow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -MT view/gingagui-AboutWindow.o -MD -MP -MF view/$(DEPDIR)/gingagui-AboutWindow.Tpo -c -o view/gingagui-AboutWindow.o `test -f 'view/AboutWindow.cpp' || echo '$(srcdir)/'`view/AboutWindow.cpp
	$(AM_V_at)$(am__mv) view/$(DEPDIR)/gingagui-AboutWindow.Tpo view/$(DEPDIR)/gingagui-AboutWindow.Po
#	$(AM_V_CXX)source='view/AboutWindow.cpp' object='view/gingagui-AboutWindow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -c -o view/gingagui-AboutWindow.o `test -f 'view/AboutWindow.cpp' || echo '$(srcdir)/'`view/AboutWindow.cpp

view/gingagui-AboutWindow.obj: view/AboutWindow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -MT view/gingagui-AboutWindow.obj -MD -MP -MF view/$(DEPDIR)/gingagui-AboutWindow.Tpo -c -o view/gingagui-AboutWindow.obj `if test -f 'view/AboutWindow.cpp'; then $(CYGPATH_W) 'view/AboutWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/view/AboutWindow.cpp'; fi`
	$(AM_V_at)$(am__mv) view/$(DEPDIR)/gingagui-AboutWindow.Tpo view/$(DEPDIR)/gingagui-AboutWindow.Po
#	$(AM_V_CXX)source='view/AboutWindow.cpp' object='view/gingagui-AboutWindow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -c -o view/gingagui-AboutWindow.obj `if test -f 'view/AboutWindow.cpp'; then $(CYGPATH_W) 'view/AboutWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/view/AboutWindow.cpp'; fi`

view/gingagui-HelpWindow.o: view/HelpWindow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -MT view/gingagui-HelpWindow.o -MD -MP -MF view/$(DEPDIR)/gingagui-HelpWindow.Tpo -c -o view/gingagui-HelpWindow.o `test -f 'view/HelpWindow.cpp' || echo '$(srcdir)/'`view/HelpWindow.cpp
	$(AM_V_at)$(am__mv) view/$(DEPDIR)/gingagui-HelpWindow.Tpo view/$(DEPDIR)/gingagui-HelpWindow.Po
#	$(AM_V_CXX)source='view/HelpWindow.cpp' object='view/gingagui-HelpWindow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -c -o view/gingagui-HelpWindow.o `test -f 'view/HelpWindow.cpp' || echo '$(srcdir)/'`view/HelpWindow.cpp

view/gingagui-HelpWindow.obj: view/HelpWindow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -MT view/gingagui-HelpWindow.obj -MD -MP -MF view/$(DEPDIR)/gingagui-HelpWindow.Tpo -c -o view/gingagui-HelpWindow.obj `if test -f 'view/HelpWindow.cpp'; then $(CYGPATH_W) 'view/HelpWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/view/HelpWindow.cpp'; fi`
	$(AM_V_at)$(am__mv) view/$(DEPDIR)/gingagui-HelpWindow.Tpo view/$(DEPDIR)/gingagui-HelpWindow.Po
#	$(AM_V_CXX)source='view/HelpWindow.cpp' object='view/gingagui-HelpWindow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -c -o view/gingagui-HelpWindow.obj `if test -f 'view/HelpWindow.cpp'; then $(CYGPATH_W) 'view/HelpWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/view/HelpWindow.cpp'; fi`

view/gingagui-Draw.o: view/Draw.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -MT view/gingagui-Draw.o -MD -MP -MF view/$(DEPDIR)/gingagui-Draw.Tpo -c -o view/gingagui-Draw.o `test -f 'view/Draw.cpp' || echo '$(srcdir)/'`view/Draw.cpp
	$(AM_V_at)$(am__mv) view/$(DEPDIR)/gingagui-Draw.Tpo view/$(DEPDIR)/gingagui-Draw.Po
#	$(AM_V_CXX)source='view/Draw.cpp' object='view/gingagui-Draw.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -c -o view/gingagui-Draw.o `test -f 'view/Draw.cpp' || echo '$(srcdir)/'`view/Draw.cpp

view/gingagui-Draw.obj: view/Draw.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -MT view/gingagui-Draw.obj -MD -MP -MF view/$(DEPDIR)/gingagui-Draw.Tpo -c -o view/gingagui-Draw.obj `if test -f 'view/Draw.cpp'; then $(CYGPATH_W) 'view/Draw.cpp'; else $(CYGPATH_W) '$(srcdir)/view/Draw.cpp'; fi`
	$(AM_V_at)$(am__mv) view/$(DEPDIR)/gingagui-Draw.Tpo view/$(DEPDIR)/gingagui-Draw.Po
#	$(AM_V_CXX)source='view/Draw.cpp' object='view/gingagui-Draw.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -c -o view/gingagui-Draw.obj `if test -f 'view/Draw.cpp'; then $(CYGPATH_W) 'view/Draw.cpp'; else $(CYGPATH_W) '$(srcdir)/view/Draw.cpp'; fi`

view/gingagui-FullscreenWindow.o: view/FullscreenWindow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -MT view/gingagui-FullscreenWindow.o -MD -MP -MF view/$(DEPDIR)/gingagui-FullscreenWindow.Tpo -c -o view/gingagui-FullscreenWindow.o `test -f 'view/FullscreenWindow.cpp' || echo '$(srcdir)/'`view/FullscreenWindow.cpp
	$(AM_V_at)$(am__mv) view/$(DEPDIR)/gingagui-FullscreenWindow.Tpo view/$(DEPDIR)/gingagui-FullscreenWindow.Po
#	$(AM_V_CXX)source='view/FullscreenWindow.cpp' object='view/gingagui-FullscreenWindow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -c -o view/gingagui-FullscreenWindow.o `test -f 'view/FullscreenWindow.cpp' || echo '$(srcdir)/'`view/FullscreenWindow.cpp

view/gingagui-FullscreenWindow.obj: view/FullscreenWindow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -MT view/gingagui-FullscreenWindow.obj -MD -MP -MF view/$(DEPDIR)/gingagui-FullscreenWindow.Tpo -c -o view/gingagui-FullscreenWindow.obj `if test -f 'view/FullscreenWindow.cpp'; then $(CYGPATH_W) 'view/FullscreenWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/view/FullscreenWindow.cpp'; fi`
	$(AM_V_at)$(am__mv) view/$(DEPDIR)/gingagui-FullscreenWindow.Tpo view/$(DEPDIR)/gingagui-FullscreenWindow.Po
#	$(AM_V_CXX)source='view/FullscreenWindow.cpp' object='view/gingagui-FullscreenWindow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -c -o view/gingagui-FullscreenWindow.obj `if test -f 'view/FullscreenWindow.cpp'; then $(CYGPATH_W) 'view/FullscreenWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/view/FullscreenWindow.cpp'; fi`

view/gingagui-MainWindow.o: view/MainWindow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -MT view/gingagui-MainWindow.o -MD -MP -MF view/$(DEPDIR)/gingagui-MainWindow.Tpo -c -o view/gingagui-MainWindow.o `test -f 'view/MainWindow.cpp' || echo '$(srcdir)/'`view/MainWindow.cpp
	$(AM_V_at)$(am__mv) view/$(DEPDIR)/gingagui-MainWindow.Tpo view/$(DEPDIR)/gingagui-MainWindow.Po
#	$(AM_V_CXX)source='view/MainWindow.cpp' object='view/gingagui-MainWindow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -c -o view/gingagui-MainWindow.o `test -f 'view/MainWindow.cpp' || echo '$(srcdir)/'`view/MainWindow.cpp

view/gingagui-MainWindow.obj: view/MainWindow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -MT view/gingagui-MainWindow.obj -MD -MP -MF view/$(DEPDIR)/gingagui-MainWindow.Tpo -c -o view/gingagui-MainWindow.obj `if test -f 'view/MainWindow.cpp'; then $(CYGPATH_W) 'view/MainWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/view/MainWindow.cpp'; fi`
	$(AM_V_at)$(am__mv) view/$(DEPDIR)/gingagui-MainWindow.Tpo view/$(DEPDIR)/gingagui-MainWindow.Po
#	$(AM_V_CXX)source='view/MainWindow.cpp' object='view/gingagui-MainWindow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -c -o view/gingagui-MainWindow.obj `if test -f 'view/MainWindow.cpp'; then $(CYGPATH_W) 'view/MainWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/view/MainWindow.cpp'; fi`

view/gingagui-BigPictureWindow.o: view/BigPictureWindow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -MT view/gingagui-BigPictureWindow.o -MD -MP -MF view/$(DEPDIR)/gingagui-BigPictureWindow.Tpo -c -o view/gingagui-BigPictureWindow.o `test -f 'view/BigPictureWindow.cpp' || echo '$(srcdir)/'`view/BigPictureWindow.cpp
	$(AM_V_at)$(am__mv) view/$(DEPDIR)/gingagui-BigPictureWindow.Tpo view/$(DEPDIR)/gingagui-BigPictureWindow.Po
#	$(AM_V_CXX)source='view/BigPictureWindow.cpp' object='view/gingagui-BigPictureWindow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -c -o view/gingagui-BigPictureWindow.o `test -f 'view/BigPictureWindow.cpp' || echo '$(srcdir)/'`view/BigPictureWindow.cpp

view/gingagui-BigPictureWindow.obj: view/BigPictureWindow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -MT view/gingagui-BigPictureWindow.obj -MD -MP -MF view/$(DEPDIR)/gingagui-BigPictureWindow.Tpo -c -o view/gingagui-BigPictureWindow.obj `if test -f 'view/BigPictureWindow.cpp'; then $(CYGPATH_W) 'view/BigPictureWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/view/BigPictureWindow.cpp'; fi`
	$(AM_V_at)$(am__mv) view/$(DEPDIR)/gingagui-BigPictureWindow.Tpo view/$(DEPDIR)/gingagui-BigPictureWindow.Po
#	$(AM_V_CXX)source='view/BigPictureWindow.cpp' object='view/gingagui-BigPictureWindow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -c -o view/gingagui-BigPictureWindow.obj `if test -f 'view/BigPictureWindow.cpp'; then $(CYGPATH_W) 'view/BigPictureWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/view/BigPictureWindow.cpp'; fi`

view/gingagui-TvControlWindow.o: view/TvControlWindow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -MT view/gingagui-TvControlWindow.o -MD -MP -MF view/$(DEPDIR)/gingagui-TvControlWindow.Tpo -c -o view/gingagui-TvControlWindow.o `test -f 'view/TvControlWindow.cpp' || echo '$(srcdir)/'`view/TvControlWindow.cpp
	$(AM_V_at)$(am__mv) view/$(DEPDIR)/gingagui-TvControlWindow.Tpo view/$(DEPDIR)/gingagui-TvControlWindow.Po
#	$(AM_V_CXX)source='view/TvControlWindow.cpp' object='view/gingagui-TvControlWindow.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -c -o view/gingagui-TvControlWindow.o `test -f 'view/TvControlWindow.cpp' || echo '$(srcdir)/'`view/TvControlWindow.cpp

view/gingagui-TvControlWindow.obj: view/TvControlWindow.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -MT view/gingagui-TvControlWindow.obj -MD -MP -MF view/$(DEPDIR)/gingagui-TvControlWindow.Tpo -c -o view/gingagui-TvControlWindow.obj `if test -f 'view/TvControlWindow.cpp'; then $(CYGPATH_W) 'view/TvControlWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/view/TvControlWindow.cpp'; fi`
	$(AM_V_at)$(am__mv) view/$(DEPDIR)/gingagui-TvControlWindow.Tpo view/$(DEPDIR)/gingagui-TvControlWindow.Po
#	$(AM_V_CXX)source='view/TvControlWindow.cpp' object='view/gingagui-TvControlWindow.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(gingagui_CXXFLAGS) $(CXXFLAGS) -c -o view/gingagui-TvControlWindow.obj `if test -f 'view/TvControlWindow.cpp'; then $(CYGPATH_W) 'view/TvControlWindow.cpp'; else $(CYGPATH_W) '$(srcdir)/view/TvControlWindow.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run 'make' without going through this Makefile.
# To change the values of 'make' variables: instead of editing Makefiles,
# (1) if the variable is set in 'config.status', edit 'config.status'
#     (which will cause the Makefiles to be regenerated when you run 'make');
# (2) otherwise, pass the desired values on the 'make' command line.
$(am__recursive_targets):
	@fail=; \
	if $(am__make_keepgoing); then \
	  failcom='fail=yes'; \
	else \
	  failcom='exit 1'; \
	fi; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-recursive
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-recursive

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-recursive

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    $(am__make_dryrun) \
	      || test -d "$(distdir)/$$subdir" \
	      || $(MKDIR_P) "$(distdir)/$$subdir" \
	      || exit 1; \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(PROGRAMS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f model/$(DEPDIR)/$(am__dirstamp)
	-rm -f model/$(am__dirstamp)
	-rm -f view/$(DEPDIR)/$(am__dirstamp)
	-rm -f view/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool mostlyclean-am

distclean: distclean-recursive
		-rm -f ./$(DEPDIR)/gingagui-ginga-gtk.Po
	-rm -f model/$(DEPDIR)/gingagui-HttpMessage.Po
	-rm -f model/$(DEPDIR)/gingagui-SaveLoadSettings.Po
	-rm -f view/$(DEPDIR)/gingagui-AboutWindow.Po
	-rm -f view/$(DEPDIR)/gingagui-BigPictureWindow.Po
	-rm -f view/$(DEPDIR)/gingagui-Draw.Po
	-rm -f view/$(DEPDIR)/gingagui-FullscreenWindow.Po
	-rm -f view/$(DEPDIR)/gingagui-HelpWindow.Po
	-rm -f view/$(DEPDIR)/gingagui-MainWindow.Po
	-rm -f view/$(DEPDIR)/gingagui-TrackerWindow.Po
	-rm -f view/$(DEPDIR)/gingagui-TvControlWindow.Po
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
		-rm -f ./$(DEPDIR)/gingagui-ginga-gtk.Po
	-rm -f model/$(DEPDIR)/gingagui-HttpMessage.Po
	-rm -f model/$(DEPDIR)/gingagui-SaveLoadSettings.Po
	-rm -f view/$(DEPDIR)/gingagui-AboutWindow.Po
	-rm -f view/$(DEPDIR)/gingagui-BigPictureWindow.Po
	-rm -f view/$(DEPDIR)/gingagui-Draw.Po
	-rm -f view/$(DEPDIR)/gingagui-FullscreenWindow.Po
	-rm -f view/$(DEPDIR)/gingagui-HelpWindow.Po
	-rm -f view/$(DEPDIR)/gingagui-MainWindow.Po
	-rm -f view/$(DEPDIR)/gingagui-TrackerWindow.Po
	-rm -f view/$(DEPDIR)/gingagui-TvControlWindow.Po
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: $(am__recursive_targets) install-am install-strip

.PHONY: $(am__recursive_targets) CTAGS GTAGS TAGS all all-am \
	am--depfiles check check-am clean clean-binPROGRAMS \
	clean-generic clean-libtool cscopelist-am ctags ctags-am \
	distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs installdirs-am \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-binPROGRAMS

.PRECIOUS: Makefile


# Local Variables:
# mode: makefile
# End:

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
