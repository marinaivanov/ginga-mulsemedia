# Makefile.in generated by automake 1.15.1 from Makefile.am.
# tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2017 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Makefile.am -- Template for generating Makefile via Automake.
# Copyright (C) 2006-2018 PUC-Rio/Laboratorio TeleMidia
#
# This file is part of Ginga (Ginga-NCL).
#
# Ginga is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# Ginga is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public
# License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Ginga.  If not, see <https://www.gnu.org/licenses/>.

# Makefile.am.common -- Common declarations.
# Copyright (C) 2013-2016 Free Software Foundation, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# Makefile.am.env -- Generates env.sh from AM_TESTS_ENVIRONMENT.
# Copyright (C) 2015-2018 Free Software Foundation, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

# Makefile.am.valgrind -- Generate Valgrind suppressions.
# Copyright (C) 2013-2018 Free Software Foundation, Inc.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.



am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/ginga
pkgincludedir = $(includedir)/ginga
pkglibdir = $(libdir)/ginga
pkglibexecdir = $(libexecdir)/ginga
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
noinst_PROGRAMS =
am__append_1 = $(builddir)/env.sh $(builddir)/env.csh $(builddir)/gdb.cfg
am__append_2 = $(builddir)/env.sh $(builddir)/env.csh $(builddir)/gdb.cfg
#am__append_3 = $(builddir)/suppfile
#am__append_4 = $(builddir)/suppfile
#am__append_5 = --suppressions=$(builddir)/suppfile

# lib/ParserLua.h ----------------------------------------------------------
am__append_6 = test-ParserLua-parseBuffer
check_PROGRAMS = $(am__EXEEXT_2)
XFAIL_TESTS = xfail-test-Document-addObject$(EXEEXT) \
	xfail-test-Object-addEvent-unknown \
	xfail-test-Ginga-getOptionBool$(EXEEXT) \
	xfail-test-Ginga-getOptionInt$(EXEEXT) \
	xfail-test-Ginga-getOptionString$(EXEEXT) \
	xfail-test-Ginga-setOptionBool$(EXEEXT) \
	xfail-test-Ginga-setOptionInt$(EXEEXT) \
	xfail-test-Ginga-setOptionString$(EXEEXT) \
	xfail-test-aud-open.ncl xfail-test-aux-xstrtod$(EXEEXT) \
	xfail-test-img-open.ncl xfail-test-lua-open.ncl \
	xfail-test-svg-open.ncl xfail-test-syntax-ncl-bad-child.ncl \
	xfail-test-syntax-ncl-bad-tag.ncl xfail-test-txt-open.ncl \
	xfail-test-vid-open.ncl
subdir = tests
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps =  \
	$(top_srcdir)/build-aux/ax_cxx_compile_stdcxx_11.m4 \
	$(top_srcdir)/build-aux/libtool.m4 \
	$(top_srcdir)/build-aux/ltoptions.m4 \
	$(top_srcdir)/build-aux/ltsugar.m4 \
	$(top_srcdir)/build-aux/ltversion.m4 \
	$(top_srcdir)/build-aux/lt~obsolete.m4 \
	$(top_srcdir)/build-aux/manywarnings.m4 \
	$(top_srcdir)/build-aux/perl.m4 \
	$(top_srcdir)/build-aux/util.m4 \
	$(top_srcdir)/build-aux/warnings.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/lib/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__EXEEXT_1 = test-ParserLua-parseBuffer$(EXEEXT)
am__EXEEXT_2 = xfail-test-aux-xstrtod$(EXEEXT) \
	test-aux-ginga-parse-bool$(EXEEXT) \
	test-aux-ginga-parse-color$(EXEEXT) \
	test-aux-ginga-parse-list$(EXEEXT) \
	test-aux-ginga-parse-table$(EXEEXT) \
	test-aux-ginga-parse-percent$(EXEEXT) \
	test-aux-ginga-parse-time$(EXEEXT) \
	test-aux-xstrispercent$(EXEEXT) \
	test-aux-xstrtodorpercent$(EXEEXT) \
	test-aux-xstrcasecmp$(EXEEXT) test-aux-xstrcaseeq$(EXEEXT) \
	test-aux-xstrhasprefix$(EXEEXT) \
	test-aux-xstrhassuffix$(EXEEXT) test-aux-xstrstrip$(EXEEXT) \
	test-aux-xstrsplit$(EXEEXT) test-aux-xpathbasename$(EXEEXT) \
	test-aux-xpathdirname$(EXEEXT) test-aux-xpathisabs$(EXEEXT) \
	test-aux-xpathisuri$(EXEEXT) test-aux-xpathmakeabs$(EXEEXT) \
	test-aux-xpathbuild$(EXEEXT) test-aux-xpathbuildabs$(EXEEXT) \
	test-aux-xpathfromuri$(EXEEXT) test-aux-xstrtod$(EXEEXT) \
	test-aux-xstrtoll$(EXEEXT) test-aux-xstrassign$(EXEEXT) \
	test-aux-xstrbuild$(EXEEXT) test-aux-xurigetcontents$(EXEEXT) \
	test-aux-xurifromsrc$(EXEEXT) test-Document-new$(EXEEXT) \
	test-Document-addObject$(EXEEXT) \
	xfail-test-Document-addObject$(EXEEXT) \
	test-Document-getObjectById$(EXEEXT) \
	test-Document-getObjectByIdOrAlias$(EXEEXT) \
	test-Predicate-new$(EXEEXT) test-Predicate-atom$(EXEEXT) \
	test-Event-new$(EXEEXT) test-Event-isLambda$(EXEEXT) \
	test-Event-setInterval$(EXEEXT) \
	test-Event-setParameter$(EXEEXT) \
	test-Event-getEventTypeAsString$(EXEEXT) \
	test-Event-getEventStateAsString$(EXEEXT) \
	test-Event-getEventTransitionAsString$(EXEEXT) \
	test-Event-transition-Media-START$(EXEEXT) \
	test-Event-transition-Context-START$(EXEEXT) \
	test-Event-transition-Media-STOP$(EXEEXT) \
	test-Event-transition-Context-STOP$(EXEEXT) \
	test-Event-transition-Media-ABORT$(EXEEXT) \
	test-Event-transition-Context-ABORT$(EXEEXT) \
	test-Event-transition-Media-PAUSE$(EXEEXT) \
	test-Event-transition-Context-PAUSE$(EXEEXT) \
	test-Event-transition-Media-RESUME$(EXEEXT) \
	test-Event-transition-Context-RESUME$(EXEEXT) \
	test-Object-addAlias$(EXEEXT) test-Object-addEvent$(EXEEXT) \
	test-Media-new$(EXEEXT) test-Media-explicitDur$(EXEEXT) \
	test-Media-nested-explicitDur$(EXEEXT) \
	test-MediaSettings-new$(EXEEXT) test-Context-new$(EXEEXT) \
	test-Context-naturalend$(EXEEXT) \
	test-Context-nested-naturalend$(EXEEXT) \
	test-Switch-new$(EXEEXT) test-Parser-parseFile$(EXEEXT) \
	test-Parser-parseBuffer$(EXEEXT) $(am__EXEEXT_1) \
	test-Ginga-version$(EXEEXT) test-Ginga-create$(EXEEXT) \
	test-Ginga-getState$(EXEEXT) test-Ginga-getOptions$(EXEEXT) \
	test-Ginga-getOptionBool$(EXEEXT) \
	test-Ginga-setOptionBool$(EXEEXT) \
	xfail-test-Ginga-getOptionBool$(EXEEXT) \
	xfail-test-Ginga-setOptionBool$(EXEEXT) \
	test-Ginga-getOptionInt$(EXEEXT) \
	test-Ginga-setOptionInt$(EXEEXT) \
	xfail-test-Ginga-getOptionInt$(EXEEXT) \
	xfail-test-Ginga-setOptionInt$(EXEEXT) \
	test-Ginga-getOptionString$(EXEEXT) \
	test-Ginga-setOptionString$(EXEEXT) \
	xfail-test-Ginga-getOptionString$(EXEEXT) \
	xfail-test-Ginga-setOptionString$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
am_test_Context_naturalend_OBJECTS =  \
	test-Context-naturalend.$(OBJEXT)
test_Context_naturalend_OBJECTS =  \
	$(am_test_Context_naturalend_OBJECTS)
test_Context_naturalend_LDADD = $(LDADD)
test_Context_naturalend_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
am_test_Context_nested_naturalend_OBJECTS =  \
	test-Context-nested-naturalend.$(OBJEXT)
test_Context_nested_naturalend_OBJECTS =  \
	$(am_test_Context_nested_naturalend_OBJECTS)
test_Context_nested_naturalend_LDADD = $(LDADD)
test_Context_nested_naturalend_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_Context_new_OBJECTS = test-Context-new.$(OBJEXT)
test_Context_new_OBJECTS = $(am_test_Context_new_OBJECTS)
test_Context_new_LDADD = $(LDADD)
test_Context_new_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_Document_addObject_OBJECTS =  \
	test-Document-addObject.$(OBJEXT)
test_Document_addObject_OBJECTS =  \
	$(am_test_Document_addObject_OBJECTS)
test_Document_addObject_LDADD = $(LDADD)
test_Document_addObject_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_Document_getObjectById_OBJECTS =  \
	test-Document-getObjectById.$(OBJEXT)
test_Document_getObjectById_OBJECTS =  \
	$(am_test_Document_getObjectById_OBJECTS)
test_Document_getObjectById_LDADD = $(LDADD)
test_Document_getObjectById_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_Document_getObjectByIdOrAlias_OBJECTS =  \
	test-Document-getObjectByIdOrAlias.$(OBJEXT)
test_Document_getObjectByIdOrAlias_OBJECTS =  \
	$(am_test_Document_getObjectByIdOrAlias_OBJECTS)
test_Document_getObjectByIdOrAlias_LDADD = $(LDADD)
test_Document_getObjectByIdOrAlias_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_Document_new_OBJECTS = test-Document-new.$(OBJEXT)
test_Document_new_OBJECTS = $(am_test_Document_new_OBJECTS)
test_Document_new_LDADD = $(LDADD)
test_Document_new_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_Event_getEventStateAsString_OBJECTS =  \
	test-Event-getEventStateAsString.$(OBJEXT)
test_Event_getEventStateAsString_OBJECTS =  \
	$(am_test_Event_getEventStateAsString_OBJECTS)
test_Event_getEventStateAsString_LDADD = $(LDADD)
test_Event_getEventStateAsString_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_Event_getEventTransitionAsString_OBJECTS =  \
	test-Event-getEventTransitionAsString.$(OBJEXT)
test_Event_getEventTransitionAsString_OBJECTS =  \
	$(am_test_Event_getEventTransitionAsString_OBJECTS)
test_Event_getEventTransitionAsString_LDADD = $(LDADD)
test_Event_getEventTransitionAsString_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_Event_getEventTypeAsString_OBJECTS =  \
	test-Event-getEventTypeAsString.$(OBJEXT)
test_Event_getEventTypeAsString_OBJECTS =  \
	$(am_test_Event_getEventTypeAsString_OBJECTS)
test_Event_getEventTypeAsString_LDADD = $(LDADD)
test_Event_getEventTypeAsString_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_Event_isLambda_OBJECTS = test-Event-isLambda.$(OBJEXT)
test_Event_isLambda_OBJECTS = $(am_test_Event_isLambda_OBJECTS)
test_Event_isLambda_LDADD = $(LDADD)
test_Event_isLambda_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_Event_new_OBJECTS = test-Event-new.$(OBJEXT)
test_Event_new_OBJECTS = $(am_test_Event_new_OBJECTS)
test_Event_new_LDADD = $(LDADD)
test_Event_new_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_Event_setInterval_OBJECTS = test-Event-setInterval.$(OBJEXT)
test_Event_setInterval_OBJECTS = $(am_test_Event_setInterval_OBJECTS)
test_Event_setInterval_LDADD = $(LDADD)
test_Event_setInterval_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_Event_setParameter_OBJECTS =  \
	test-Event-setParameter.$(OBJEXT)
test_Event_setParameter_OBJECTS =  \
	$(am_test_Event_setParameter_OBJECTS)
test_Event_setParameter_LDADD = $(LDADD)
test_Event_setParameter_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_Event_transition_Context_ABORT_OBJECTS =  \
	test-Event-transition-Context-ABORT.$(OBJEXT)
test_Event_transition_Context_ABORT_OBJECTS =  \
	$(am_test_Event_transition_Context_ABORT_OBJECTS)
test_Event_transition_Context_ABORT_LDADD = $(LDADD)
test_Event_transition_Context_ABORT_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_Event_transition_Context_PAUSE_OBJECTS =  \
	test-Event-transition-Context-PAUSE.$(OBJEXT)
test_Event_transition_Context_PAUSE_OBJECTS =  \
	$(am_test_Event_transition_Context_PAUSE_OBJECTS)
test_Event_transition_Context_PAUSE_LDADD = $(LDADD)
test_Event_transition_Context_PAUSE_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_Event_transition_Context_RESUME_OBJECTS =  \
	test-Event-transition-Context-RESUME.$(OBJEXT)
test_Event_transition_Context_RESUME_OBJECTS =  \
	$(am_test_Event_transition_Context_RESUME_OBJECTS)
test_Event_transition_Context_RESUME_LDADD = $(LDADD)
test_Event_transition_Context_RESUME_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_Event_transition_Context_START_OBJECTS =  \
	test-Event-transition-Context-START.$(OBJEXT)
test_Event_transition_Context_START_OBJECTS =  \
	$(am_test_Event_transition_Context_START_OBJECTS)
test_Event_transition_Context_START_LDADD = $(LDADD)
test_Event_transition_Context_START_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_Event_transition_Context_STOP_OBJECTS =  \
	test-Event-transition-Context-STOP.$(OBJEXT)
test_Event_transition_Context_STOP_OBJECTS =  \
	$(am_test_Event_transition_Context_STOP_OBJECTS)
test_Event_transition_Context_STOP_LDADD = $(LDADD)
test_Event_transition_Context_STOP_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_Event_transition_Media_ABORT_OBJECTS =  \
	test-Event-transition-Media-ABORT.$(OBJEXT)
test_Event_transition_Media_ABORT_OBJECTS =  \
	$(am_test_Event_transition_Media_ABORT_OBJECTS)
test_Event_transition_Media_ABORT_LDADD = $(LDADD)
test_Event_transition_Media_ABORT_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_Event_transition_Media_PAUSE_OBJECTS =  \
	test-Event-transition-Media-PAUSE.$(OBJEXT)
test_Event_transition_Media_PAUSE_OBJECTS =  \
	$(am_test_Event_transition_Media_PAUSE_OBJECTS)
test_Event_transition_Media_PAUSE_LDADD = $(LDADD)
test_Event_transition_Media_PAUSE_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_Event_transition_Media_RESUME_OBJECTS =  \
	test-Event-transition-Media-RESUME.$(OBJEXT)
test_Event_transition_Media_RESUME_OBJECTS =  \
	$(am_test_Event_transition_Media_RESUME_OBJECTS)
test_Event_transition_Media_RESUME_LDADD = $(LDADD)
test_Event_transition_Media_RESUME_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_Event_transition_Media_START_OBJECTS =  \
	test-Event-transition-Media-START.$(OBJEXT)
test_Event_transition_Media_START_OBJECTS =  \
	$(am_test_Event_transition_Media_START_OBJECTS)
test_Event_transition_Media_START_LDADD = $(LDADD)
test_Event_transition_Media_START_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_Event_transition_Media_STOP_OBJECTS =  \
	test-Event-transition-Media-STOP.$(OBJEXT)
test_Event_transition_Media_STOP_OBJECTS =  \
	$(am_test_Event_transition_Media_STOP_OBJECTS)
test_Event_transition_Media_STOP_LDADD = $(LDADD)
test_Event_transition_Media_STOP_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_Ginga_create_OBJECTS = test-Ginga-create.$(OBJEXT)
test_Ginga_create_OBJECTS = $(am_test_Ginga_create_OBJECTS)
test_Ginga_create_LDADD = $(LDADD)
test_Ginga_create_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_Ginga_getOptionBool_OBJECTS =  \
	test-Ginga-getOptionBool.$(OBJEXT)
test_Ginga_getOptionBool_OBJECTS =  \
	$(am_test_Ginga_getOptionBool_OBJECTS)
test_Ginga_getOptionBool_LDADD = $(LDADD)
test_Ginga_getOptionBool_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_Ginga_getOptionInt_OBJECTS =  \
	test-Ginga-getOptionInt.$(OBJEXT)
test_Ginga_getOptionInt_OBJECTS =  \
	$(am_test_Ginga_getOptionInt_OBJECTS)
test_Ginga_getOptionInt_LDADD = $(LDADD)
test_Ginga_getOptionInt_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_Ginga_getOptionString_OBJECTS =  \
	test-Ginga-getOptionString.$(OBJEXT)
test_Ginga_getOptionString_OBJECTS =  \
	$(am_test_Ginga_getOptionString_OBJECTS)
test_Ginga_getOptionString_LDADD = $(LDADD)
test_Ginga_getOptionString_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_Ginga_getOptions_OBJECTS = test-Ginga-getOptions.$(OBJEXT)
test_Ginga_getOptions_OBJECTS = $(am_test_Ginga_getOptions_OBJECTS)
test_Ginga_getOptions_LDADD = $(LDADD)
test_Ginga_getOptions_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_Ginga_getState_OBJECTS = test-Ginga-getState.$(OBJEXT)
test_Ginga_getState_OBJECTS = $(am_test_Ginga_getState_OBJECTS)
test_Ginga_getState_LDADD = $(LDADD)
test_Ginga_getState_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_Ginga_setOptionBool_OBJECTS =  \
	test-Ginga-setOptionBool.$(OBJEXT)
test_Ginga_setOptionBool_OBJECTS =  \
	$(am_test_Ginga_setOptionBool_OBJECTS)
test_Ginga_setOptionBool_LDADD = $(LDADD)
test_Ginga_setOptionBool_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_Ginga_setOptionInt_OBJECTS =  \
	test-Ginga-setOptionInt.$(OBJEXT)
test_Ginga_setOptionInt_OBJECTS =  \
	$(am_test_Ginga_setOptionInt_OBJECTS)
test_Ginga_setOptionInt_LDADD = $(LDADD)
test_Ginga_setOptionInt_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_Ginga_setOptionString_OBJECTS =  \
	test-Ginga-setOptionString.$(OBJEXT)
test_Ginga_setOptionString_OBJECTS =  \
	$(am_test_Ginga_setOptionString_OBJECTS)
test_Ginga_setOptionString_LDADD = $(LDADD)
test_Ginga_setOptionString_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_Ginga_version_OBJECTS = test-Ginga-version.$(OBJEXT)
test_Ginga_version_OBJECTS = $(am_test_Ginga_version_OBJECTS)
test_Ginga_version_LDADD = $(LDADD)
test_Ginga_version_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_Media_explicitDur_OBJECTS = test-Media-explicitDur.$(OBJEXT)
test_Media_explicitDur_OBJECTS = $(am_test_Media_explicitDur_OBJECTS)
test_Media_explicitDur_LDADD = $(LDADD)
test_Media_explicitDur_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_Media_nested_explicitDur_OBJECTS =  \
	test-Media-nested-explicitDur.$(OBJEXT)
test_Media_nested_explicitDur_OBJECTS =  \
	$(am_test_Media_nested_explicitDur_OBJECTS)
test_Media_nested_explicitDur_LDADD = $(LDADD)
test_Media_nested_explicitDur_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_Media_new_OBJECTS = test-Media-new.$(OBJEXT)
test_Media_new_OBJECTS = $(am_test_Media_new_OBJECTS)
test_Media_new_LDADD = $(LDADD)
test_Media_new_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_MediaSettings_new_OBJECTS = test-MediaSettings-new.$(OBJEXT)
test_MediaSettings_new_OBJECTS = $(am_test_MediaSettings_new_OBJECTS)
test_MediaSettings_new_LDADD = $(LDADD)
test_MediaSettings_new_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_Object_addAlias_OBJECTS = test-Object-addAlias.$(OBJEXT)
test_Object_addAlias_OBJECTS = $(am_test_Object_addAlias_OBJECTS)
test_Object_addAlias_LDADD = $(LDADD)
test_Object_addAlias_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_Object_addEvent_OBJECTS = test-Object-addEvent.$(OBJEXT)
test_Object_addEvent_OBJECTS = $(am_test_Object_addEvent_OBJECTS)
test_Object_addEvent_LDADD = $(LDADD)
test_Object_addEvent_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_Parser_parseBuffer_OBJECTS =  \
	test-Parser-parseBuffer.$(OBJEXT)
test_Parser_parseBuffer_OBJECTS =  \
	$(am_test_Parser_parseBuffer_OBJECTS)
test_Parser_parseBuffer_LDADD = $(LDADD)
test_Parser_parseBuffer_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_Parser_parseFile_OBJECTS = test-Parser-parseFile.$(OBJEXT)
test_Parser_parseFile_OBJECTS = $(am_test_Parser_parseFile_OBJECTS)
test_Parser_parseFile_LDADD = $(LDADD)
test_Parser_parseFile_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am__test_ParserLua_parseBuffer_SOURCES_DIST =  \
	test-ParserLua-parseBuffer.cpp
am_test_ParserLua_parseBuffer_OBJECTS =  \
	test-ParserLua-parseBuffer.$(OBJEXT)
test_ParserLua_parseBuffer_OBJECTS =  \
	$(am_test_ParserLua_parseBuffer_OBJECTS)
test_ParserLua_parseBuffer_LDADD = $(LDADD)
test_ParserLua_parseBuffer_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_Predicate_atom_OBJECTS = test-Predicate-atom.$(OBJEXT)
test_Predicate_atom_OBJECTS = $(am_test_Predicate_atom_OBJECTS)
test_Predicate_atom_LDADD = $(LDADD)
test_Predicate_atom_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_Predicate_new_OBJECTS = test-Predicate-new.$(OBJEXT)
test_Predicate_new_OBJECTS = $(am_test_Predicate_new_OBJECTS)
test_Predicate_new_LDADD = $(LDADD)
test_Predicate_new_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_Switch_new_OBJECTS = test-Switch-new.$(OBJEXT)
test_Switch_new_OBJECTS = $(am_test_Switch_new_OBJECTS)
test_Switch_new_LDADD = $(LDADD)
test_Switch_new_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_aux_ginga_parse_bool_OBJECTS =  \
	test-aux-ginga-parse-bool.$(OBJEXT)
test_aux_ginga_parse_bool_OBJECTS =  \
	$(am_test_aux_ginga_parse_bool_OBJECTS)
test_aux_ginga_parse_bool_LDADD = $(LDADD)
test_aux_ginga_parse_bool_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_aux_ginga_parse_color_OBJECTS =  \
	test-aux-ginga-parse-color.$(OBJEXT)
test_aux_ginga_parse_color_OBJECTS =  \
	$(am_test_aux_ginga_parse_color_OBJECTS)
test_aux_ginga_parse_color_LDADD = $(LDADD)
test_aux_ginga_parse_color_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_aux_ginga_parse_list_OBJECTS =  \
	test-aux-ginga-parse-list.$(OBJEXT)
test_aux_ginga_parse_list_OBJECTS =  \
	$(am_test_aux_ginga_parse_list_OBJECTS)
test_aux_ginga_parse_list_LDADD = $(LDADD)
test_aux_ginga_parse_list_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_aux_ginga_parse_percent_OBJECTS =  \
	test-aux-ginga-parse-percent.$(OBJEXT)
test_aux_ginga_parse_percent_OBJECTS =  \
	$(am_test_aux_ginga_parse_percent_OBJECTS)
test_aux_ginga_parse_percent_LDADD = $(LDADD)
test_aux_ginga_parse_percent_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_aux_ginga_parse_table_OBJECTS =  \
	test-aux-ginga-parse-table.$(OBJEXT)
test_aux_ginga_parse_table_OBJECTS =  \
	$(am_test_aux_ginga_parse_table_OBJECTS)
test_aux_ginga_parse_table_LDADD = $(LDADD)
test_aux_ginga_parse_table_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_aux_ginga_parse_time_OBJECTS =  \
	test-aux-ginga-parse-time.$(OBJEXT)
test_aux_ginga_parse_time_OBJECTS =  \
	$(am_test_aux_ginga_parse_time_OBJECTS)
test_aux_ginga_parse_time_LDADD = $(LDADD)
test_aux_ginga_parse_time_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_aux_xpathbasename_OBJECTS = test-aux-xpathbasename.$(OBJEXT)
test_aux_xpathbasename_OBJECTS = $(am_test_aux_xpathbasename_OBJECTS)
test_aux_xpathbasename_LDADD = $(LDADD)
test_aux_xpathbasename_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_aux_xpathbuild_OBJECTS = test-aux-xpathbuild.$(OBJEXT)
test_aux_xpathbuild_OBJECTS = $(am_test_aux_xpathbuild_OBJECTS)
test_aux_xpathbuild_LDADD = $(LDADD)
test_aux_xpathbuild_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_aux_xpathbuildabs_OBJECTS = test-aux-xpathbuildabs.$(OBJEXT)
test_aux_xpathbuildabs_OBJECTS = $(am_test_aux_xpathbuildabs_OBJECTS)
test_aux_xpathbuildabs_LDADD = $(LDADD)
test_aux_xpathbuildabs_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_aux_xpathdirname_OBJECTS = test-aux-xpathdirname.$(OBJEXT)
test_aux_xpathdirname_OBJECTS = $(am_test_aux_xpathdirname_OBJECTS)
test_aux_xpathdirname_LDADD = $(LDADD)
test_aux_xpathdirname_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_aux_xpathfromuri_OBJECTS = test-aux-xpathfromuri.$(OBJEXT)
test_aux_xpathfromuri_OBJECTS = $(am_test_aux_xpathfromuri_OBJECTS)
test_aux_xpathfromuri_LDADD = $(LDADD)
test_aux_xpathfromuri_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_aux_xpathisabs_OBJECTS = test-aux-xpathisabs.$(OBJEXT)
test_aux_xpathisabs_OBJECTS = $(am_test_aux_xpathisabs_OBJECTS)
test_aux_xpathisabs_LDADD = $(LDADD)
test_aux_xpathisabs_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_aux_xpathisuri_OBJECTS = test-aux-xpathisuri.$(OBJEXT)
test_aux_xpathisuri_OBJECTS = $(am_test_aux_xpathisuri_OBJECTS)
test_aux_xpathisuri_LDADD = $(LDADD)
test_aux_xpathisuri_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_aux_xpathmakeabs_OBJECTS = test-aux-xpathmakeabs.$(OBJEXT)
test_aux_xpathmakeabs_OBJECTS = $(am_test_aux_xpathmakeabs_OBJECTS)
test_aux_xpathmakeabs_LDADD = $(LDADD)
test_aux_xpathmakeabs_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_aux_xstrassign_OBJECTS = test-aux-xstrassign.$(OBJEXT)
test_aux_xstrassign_OBJECTS = $(am_test_aux_xstrassign_OBJECTS)
test_aux_xstrassign_LDADD = $(LDADD)
test_aux_xstrassign_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_aux_xstrbuild_OBJECTS = test-aux-xstrbuild.$(OBJEXT)
test_aux_xstrbuild_OBJECTS = $(am_test_aux_xstrbuild_OBJECTS)
test_aux_xstrbuild_LDADD = $(LDADD)
test_aux_xstrbuild_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_aux_xstrcasecmp_OBJECTS = test-aux-xstrcasecmp.$(OBJEXT)
test_aux_xstrcasecmp_OBJECTS = $(am_test_aux_xstrcasecmp_OBJECTS)
test_aux_xstrcasecmp_LDADD = $(LDADD)
test_aux_xstrcasecmp_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_aux_xstrcaseeq_OBJECTS = test-aux-xstrcaseeq.$(OBJEXT)
test_aux_xstrcaseeq_OBJECTS = $(am_test_aux_xstrcaseeq_OBJECTS)
test_aux_xstrcaseeq_LDADD = $(LDADD)
test_aux_xstrcaseeq_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_aux_xstrhasprefix_OBJECTS = test-aux-xstrhasprefix.$(OBJEXT)
test_aux_xstrhasprefix_OBJECTS = $(am_test_aux_xstrhasprefix_OBJECTS)
test_aux_xstrhasprefix_LDADD = $(LDADD)
test_aux_xstrhasprefix_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_aux_xstrhassuffix_OBJECTS = test-aux-xstrhassuffix.$(OBJEXT)
test_aux_xstrhassuffix_OBJECTS = $(am_test_aux_xstrhassuffix_OBJECTS)
test_aux_xstrhassuffix_LDADD = $(LDADD)
test_aux_xstrhassuffix_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_aux_xstrispercent_OBJECTS = test-aux-xstrispercent.$(OBJEXT)
test_aux_xstrispercent_OBJECTS = $(am_test_aux_xstrispercent_OBJECTS)
test_aux_xstrispercent_LDADD = $(LDADD)
test_aux_xstrispercent_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_aux_xstrsplit_OBJECTS = test-aux-xstrsplit.$(OBJEXT)
test_aux_xstrsplit_OBJECTS = $(am_test_aux_xstrsplit_OBJECTS)
test_aux_xstrsplit_LDADD = $(LDADD)
test_aux_xstrsplit_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_aux_xstrstrip_OBJECTS = test-aux-xstrstrip.$(OBJEXT)
test_aux_xstrstrip_OBJECTS = $(am_test_aux_xstrstrip_OBJECTS)
test_aux_xstrstrip_LDADD = $(LDADD)
test_aux_xstrstrip_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_aux_xstrtod_OBJECTS = test-aux-xstrtod.$(OBJEXT)
test_aux_xstrtod_OBJECTS = $(am_test_aux_xstrtod_OBJECTS)
test_aux_xstrtod_LDADD = $(LDADD)
test_aux_xstrtod_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_aux_xstrtodorpercent_OBJECTS =  \
	test-aux-xstrtodorpercent.$(OBJEXT)
test_aux_xstrtodorpercent_OBJECTS =  \
	$(am_test_aux_xstrtodorpercent_OBJECTS)
test_aux_xstrtodorpercent_LDADD = $(LDADD)
test_aux_xstrtodorpercent_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_test_aux_xstrtoll_OBJECTS = test-aux-xstrtoll.$(OBJEXT)
test_aux_xstrtoll_OBJECTS = $(am_test_aux_xstrtoll_OBJECTS)
test_aux_xstrtoll_LDADD = $(LDADD)
test_aux_xstrtoll_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_aux_xurifromsrc_OBJECTS = test-aux-xurifromsrc.$(OBJEXT)
test_aux_xurifromsrc_OBJECTS = $(am_test_aux_xurifromsrc_OBJECTS)
test_aux_xurifromsrc_LDADD = $(LDADD)
test_aux_xurifromsrc_DEPENDENCIES = $(top_builddir)/lib/libginga.la
am_test_aux_xurigetcontents_OBJECTS =  \
	test-aux-xurigetcontents.$(OBJEXT)
test_aux_xurigetcontents_OBJECTS =  \
	$(am_test_aux_xurigetcontents_OBJECTS)
test_aux_xurigetcontents_LDADD = $(LDADD)
test_aux_xurigetcontents_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_xfail_test_Document_addObject_OBJECTS =  \
	xfail-test-Document-addObject.$(OBJEXT)
xfail_test_Document_addObject_OBJECTS =  \
	$(am_xfail_test_Document_addObject_OBJECTS)
xfail_test_Document_addObject_LDADD = $(LDADD)
xfail_test_Document_addObject_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_xfail_test_Ginga_getOptionBool_OBJECTS =  \
	xfail-test-Ginga-getOptionBool.$(OBJEXT)
xfail_test_Ginga_getOptionBool_OBJECTS =  \
	$(am_xfail_test_Ginga_getOptionBool_OBJECTS)
xfail_test_Ginga_getOptionBool_LDADD = $(LDADD)
xfail_test_Ginga_getOptionBool_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_xfail_test_Ginga_getOptionInt_OBJECTS =  \
	xfail-test-Ginga-getOptionInt.$(OBJEXT)
xfail_test_Ginga_getOptionInt_OBJECTS =  \
	$(am_xfail_test_Ginga_getOptionInt_OBJECTS)
xfail_test_Ginga_getOptionInt_LDADD = $(LDADD)
xfail_test_Ginga_getOptionInt_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_xfail_test_Ginga_getOptionString_OBJECTS =  \
	xfail-test-Ginga-getOptionString.$(OBJEXT)
xfail_test_Ginga_getOptionString_OBJECTS =  \
	$(am_xfail_test_Ginga_getOptionString_OBJECTS)
xfail_test_Ginga_getOptionString_LDADD = $(LDADD)
xfail_test_Ginga_getOptionString_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_xfail_test_Ginga_setOptionBool_OBJECTS =  \
	xfail-test-Ginga-setOptionBool.$(OBJEXT)
xfail_test_Ginga_setOptionBool_OBJECTS =  \
	$(am_xfail_test_Ginga_setOptionBool_OBJECTS)
xfail_test_Ginga_setOptionBool_LDADD = $(LDADD)
xfail_test_Ginga_setOptionBool_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_xfail_test_Ginga_setOptionInt_OBJECTS =  \
	xfail-test-Ginga-setOptionInt.$(OBJEXT)
xfail_test_Ginga_setOptionInt_OBJECTS =  \
	$(am_xfail_test_Ginga_setOptionInt_OBJECTS)
xfail_test_Ginga_setOptionInt_LDADD = $(LDADD)
xfail_test_Ginga_setOptionInt_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_xfail_test_Ginga_setOptionString_OBJECTS =  \
	xfail-test-Ginga-setOptionString.$(OBJEXT)
xfail_test_Ginga_setOptionString_OBJECTS =  \
	$(am_xfail_test_Ginga_setOptionString_OBJECTS)
xfail_test_Ginga_setOptionString_LDADD = $(LDADD)
xfail_test_Ginga_setOptionString_DEPENDENCIES =  \
	$(top_builddir)/lib/libginga.la
am_xfail_test_aux_xstrtod_OBJECTS = xfail-test-aux-xstrtod.$(OBJEXT)
xfail_test_aux_xstrtod_OBJECTS = $(am_xfail_test_aux_xstrtod_OBJECTS)
xfail_test_aux_xstrtod_LDADD = $(LDADD)
xfail_test_aux_xstrtod_DEPENDENCIES = $(top_builddir)/lib/libginga.la
SCRIPTS = $(noinst_SCRIPTS)
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/lib
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(test_Context_naturalend_SOURCES) \
	$(test_Context_nested_naturalend_SOURCES) \
	$(test_Context_new_SOURCES) $(test_Document_addObject_SOURCES) \
	$(test_Document_getObjectById_SOURCES) \
	$(test_Document_getObjectByIdOrAlias_SOURCES) \
	$(test_Document_new_SOURCES) \
	$(test_Event_getEventStateAsString_SOURCES) \
	$(test_Event_getEventTransitionAsString_SOURCES) \
	$(test_Event_getEventTypeAsString_SOURCES) \
	$(test_Event_isLambda_SOURCES) $(test_Event_new_SOURCES) \
	$(test_Event_setInterval_SOURCES) \
	$(test_Event_setParameter_SOURCES) \
	$(test_Event_transition_Context_ABORT_SOURCES) \
	$(test_Event_transition_Context_PAUSE_SOURCES) \
	$(test_Event_transition_Context_RESUME_SOURCES) \
	$(test_Event_transition_Context_START_SOURCES) \
	$(test_Event_transition_Context_STOP_SOURCES) \
	$(test_Event_transition_Media_ABORT_SOURCES) \
	$(test_Event_transition_Media_PAUSE_SOURCES) \
	$(test_Event_transition_Media_RESUME_SOURCES) \
	$(test_Event_transition_Media_START_SOURCES) \
	$(test_Event_transition_Media_STOP_SOURCES) \
	$(test_Ginga_create_SOURCES) \
	$(test_Ginga_getOptionBool_SOURCES) \
	$(test_Ginga_getOptionInt_SOURCES) \
	$(test_Ginga_getOptionString_SOURCES) \
	$(test_Ginga_getOptions_SOURCES) \
	$(test_Ginga_getState_SOURCES) \
	$(test_Ginga_setOptionBool_SOURCES) \
	$(test_Ginga_setOptionInt_SOURCES) \
	$(test_Ginga_setOptionString_SOURCES) \
	$(test_Ginga_version_SOURCES) \
	$(test_Media_explicitDur_SOURCES) \
	$(test_Media_nested_explicitDur_SOURCES) \
	$(test_Media_new_SOURCES) $(test_MediaSettings_new_SOURCES) \
	$(test_Object_addAlias_SOURCES) \
	$(test_Object_addEvent_SOURCES) \
	$(test_Parser_parseBuffer_SOURCES) \
	$(test_Parser_parseFile_SOURCES) \
	$(test_ParserLua_parseBuffer_SOURCES) \
	$(test_Predicate_atom_SOURCES) $(test_Predicate_new_SOURCES) \
	$(test_Switch_new_SOURCES) \
	$(test_aux_ginga_parse_bool_SOURCES) \
	$(test_aux_ginga_parse_color_SOURCES) \
	$(test_aux_ginga_parse_list_SOURCES) \
	$(test_aux_ginga_parse_percent_SOURCES) \
	$(test_aux_ginga_parse_table_SOURCES) \
	$(test_aux_ginga_parse_time_SOURCES) \
	$(test_aux_xpathbasename_SOURCES) \
	$(test_aux_xpathbuild_SOURCES) \
	$(test_aux_xpathbuildabs_SOURCES) \
	$(test_aux_xpathdirname_SOURCES) \
	$(test_aux_xpathfromuri_SOURCES) \
	$(test_aux_xpathisabs_SOURCES) $(test_aux_xpathisuri_SOURCES) \
	$(test_aux_xpathmakeabs_SOURCES) \
	$(test_aux_xstrassign_SOURCES) $(test_aux_xstrbuild_SOURCES) \
	$(test_aux_xstrcasecmp_SOURCES) $(test_aux_xstrcaseeq_SOURCES) \
	$(test_aux_xstrhasprefix_SOURCES) \
	$(test_aux_xstrhassuffix_SOURCES) \
	$(test_aux_xstrispercent_SOURCES) \
	$(test_aux_xstrsplit_SOURCES) $(test_aux_xstrstrip_SOURCES) \
	$(test_aux_xstrtod_SOURCES) \
	$(test_aux_xstrtodorpercent_SOURCES) \
	$(test_aux_xstrtoll_SOURCES) $(test_aux_xurifromsrc_SOURCES) \
	$(test_aux_xurigetcontents_SOURCES) \
	$(xfail_test_Document_addObject_SOURCES) \
	$(xfail_test_Ginga_getOptionBool_SOURCES) \
	$(xfail_test_Ginga_getOptionInt_SOURCES) \
	$(xfail_test_Ginga_getOptionString_SOURCES) \
	$(xfail_test_Ginga_setOptionBool_SOURCES) \
	$(xfail_test_Ginga_setOptionInt_SOURCES) \
	$(xfail_test_Ginga_setOptionString_SOURCES) \
	$(xfail_test_aux_xstrtod_SOURCES)
DIST_SOURCES = $(test_Context_naturalend_SOURCES) \
	$(test_Context_nested_naturalend_SOURCES) \
	$(test_Context_new_SOURCES) $(test_Document_addObject_SOURCES) \
	$(test_Document_getObjectById_SOURCES) \
	$(test_Document_getObjectByIdOrAlias_SOURCES) \
	$(test_Document_new_SOURCES) \
	$(test_Event_getEventStateAsString_SOURCES) \
	$(test_Event_getEventTransitionAsString_SOURCES) \
	$(test_Event_getEventTypeAsString_SOURCES) \
	$(test_Event_isLambda_SOURCES) $(test_Event_new_SOURCES) \
	$(test_Event_setInterval_SOURCES) \
	$(test_Event_setParameter_SOURCES) \
	$(test_Event_transition_Context_ABORT_SOURCES) \
	$(test_Event_transition_Context_PAUSE_SOURCES) \
	$(test_Event_transition_Context_RESUME_SOURCES) \
	$(test_Event_transition_Context_START_SOURCES) \
	$(test_Event_transition_Context_STOP_SOURCES) \
	$(test_Event_transition_Media_ABORT_SOURCES) \
	$(test_Event_transition_Media_PAUSE_SOURCES) \
	$(test_Event_transition_Media_RESUME_SOURCES) \
	$(test_Event_transition_Media_START_SOURCES) \
	$(test_Event_transition_Media_STOP_SOURCES) \
	$(test_Ginga_create_SOURCES) \
	$(test_Ginga_getOptionBool_SOURCES) \
	$(test_Ginga_getOptionInt_SOURCES) \
	$(test_Ginga_getOptionString_SOURCES) \
	$(test_Ginga_getOptions_SOURCES) \
	$(test_Ginga_getState_SOURCES) \
	$(test_Ginga_setOptionBool_SOURCES) \
	$(test_Ginga_setOptionInt_SOURCES) \
	$(test_Ginga_setOptionString_SOURCES) \
	$(test_Ginga_version_SOURCES) \
	$(test_Media_explicitDur_SOURCES) \
	$(test_Media_nested_explicitDur_SOURCES) \
	$(test_Media_new_SOURCES) $(test_MediaSettings_new_SOURCES) \
	$(test_Object_addAlias_SOURCES) \
	$(test_Object_addEvent_SOURCES) \
	$(test_Parser_parseBuffer_SOURCES) \
	$(test_Parser_parseFile_SOURCES) \
	$(am__test_ParserLua_parseBuffer_SOURCES_DIST) \
	$(test_Predicate_atom_SOURCES) $(test_Predicate_new_SOURCES) \
	$(test_Switch_new_SOURCES) \
	$(test_aux_ginga_parse_bool_SOURCES) \
	$(test_aux_ginga_parse_color_SOURCES) \
	$(test_aux_ginga_parse_list_SOURCES) \
	$(test_aux_ginga_parse_percent_SOURCES) \
	$(test_aux_ginga_parse_table_SOURCES) \
	$(test_aux_ginga_parse_time_SOURCES) \
	$(test_aux_xpathbasename_SOURCES) \
	$(test_aux_xpathbuild_SOURCES) \
	$(test_aux_xpathbuildabs_SOURCES) \
	$(test_aux_xpathdirname_SOURCES) \
	$(test_aux_xpathfromuri_SOURCES) \
	$(test_aux_xpathisabs_SOURCES) $(test_aux_xpathisuri_SOURCES) \
	$(test_aux_xpathmakeabs_SOURCES) \
	$(test_aux_xstrassign_SOURCES) $(test_aux_xstrbuild_SOURCES) \
	$(test_aux_xstrcasecmp_SOURCES) $(test_aux_xstrcaseeq_SOURCES) \
	$(test_aux_xstrhasprefix_SOURCES) \
	$(test_aux_xstrhassuffix_SOURCES) \
	$(test_aux_xstrispercent_SOURCES) \
	$(test_aux_xstrsplit_SOURCES) $(test_aux_xstrstrip_SOURCES) \
	$(test_aux_xstrtod_SOURCES) \
	$(test_aux_xstrtodorpercent_SOURCES) \
	$(test_aux_xstrtoll_SOURCES) $(test_aux_xurifromsrc_SOURCES) \
	$(test_aux_xurigetcontents_SOURCES) \
	$(xfail_test_Document_addObject_SOURCES) \
	$(xfail_test_Ginga_getOptionBool_SOURCES) \
	$(xfail_test_Ginga_getOptionInt_SOURCES) \
	$(xfail_test_Ginga_getOptionString_SOURCES) \
	$(xfail_test_Ginga_setOptionBool_SOURCES) \
	$(xfail_test_Ginga_setOptionInt_SOURCES) \
	$(xfail_test_Ginga_setOptionString_SOURCES) \
	$(xfail_test_aux_xstrtod_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:.log=.log)
TEST_LOGS = $(am__test_logs2:.ncl.log=.log)
NCL_LOG_DRIVER = $(SHELL) $(top_srcdir)/build-aux/test-driver
NCL_LOG_COMPILE = $(NCL_LOG_COMPILER) $(AM_NCL_LOG_FLAGS) \
	$(NCL_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in \
	$(top_srcdir)/build-aux/Makefile.am.common \
	$(top_srcdir)/build-aux/Makefile.am.env \
	$(top_srcdir)/build-aux/Makefile.am.valgrind \
	$(top_srcdir)/build-aux/depcomp \
	$(top_srcdir)/build-aux/test-driver
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/fabio/git/ginga-mulsemedia/build-aux/missing aclocal-1.15
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AS = as
AUTOCONF = ${SHELL} /home/fabio/git/ginga-mulsemedia/build-aux/missing autoconf
AUTOHEADER = ${SHELL} /home/fabio/git/ginga-mulsemedia/build-aux/missing autoheader
AUTOMAKE = ${SHELL} /home/fabio/git/ginga-mulsemedia/build-aux/missing automake-1.15
AWK = gawk
CAIRO_CFLAGS = -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/libpng16
CAIRO_LIBS = -lcairo
CAIRO_REQUIRED_VERSION = 1.10.2
CC = gcc
CCDEPMODE = depmode=gcc3
CEF_CFLAGS = 
CEF_LIBS = 
CEF_REQUIRED_VERSION = 3.0
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
FGREP = /bin/grep -F
GENHTML = 
GINGA_ALL_CXXFLAGS =     -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/libpng16  -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -pthread -I/usr/include/gstreamer-1.0 -I/usr/include/orc-0.4 -I/usr/include/gstreamer-1.0 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -pthread -I/usr/include/gtk-3.0 -I/usr/include/at-spi2-atk/2.0 -I/usr/include/at-spi-2.0 -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include -I/usr/include/gtk-3.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng16 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -pthread -I/usr/include/librsvg-2.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng16 -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/libxml2 -I/usr/include/lua5.2   -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/libpng16 -pthread -I/usr/include/libsoup-2.4 -I/usr/include/libxml2 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
GINGA_ALL_LDFLAGS =  -lcairo  -lglib-2.0 -lgstvideo-1.0 -lgstaudio-1.0 -lgstapp-1.0 -lgstbase-1.0 -lgstreamer-1.0 -lgobject-2.0 -lglib-2.0 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 -lrsvg-2 -lm -lgio-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 -lcairo -lxml2 -llua5.2 -export-dynamic -lnclua  -lpangocairo-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lcairo -lsoup-2.4 -lgio-2.0 -lgobject-2.0 -lglib-2.0
GINGA_LIBTOOL_AGE = 0
GINGA_LIBTOOL_CURRENT = 0
GINGA_LIBTOOL_CURRENT_MINUS_AGE = 0
GINGA_LIBTOOL_REVISION = 0
GINGA_LIBTOOL_STRING = 0:0:0
GINGA_VERSION_MAJOR = 1
GINGA_VERSION_MICRO = 9
GINGA_VERSION_MINOR = 0
GINGA_VERSION_STRING = 1.0.9-28be-dirty
GLIB_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
GLIB_LIBS = -lglib-2.0
GLIB_REQUIRED_VERSION = 2.32.4
GREP = /bin/grep
GSTREAMER_CFLAGS = -pthread -I/usr/include/gstreamer-1.0 -I/usr/include/orc-0.4 -I/usr/include/gstreamer-1.0 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
GSTREAMER_LIBS = -lgstvideo-1.0 -lgstaudio-1.0 -lgstapp-1.0 -lgstbase-1.0 -lgstreamer-1.0 -lgobject-2.0 -lglib-2.0
GSTREAMER_REQUIRED_VERSION = 1.2.0
GTK_CFLAGS = -pthread -I/usr/include/gtk-3.0 -I/usr/include/at-spi2-atk/2.0 -I/usr/include/at-spi-2.0 -I/usr/include/dbus-1.0 -I/usr/lib/x86_64-linux-gnu/dbus-1.0/include -I/usr/include/gtk-3.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/atk-1.0 -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng16 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0
GTK_REQUIRED_VERSION = 3.4.2
HAVE_CXX11 = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LCOV = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LIBM = -lm
LIBOBJS = 
LIBRSVG_CFLAGS = -pthread -I/usr/include/librsvg-2.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng16 -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/libpng16
LIBRSVG_LIBS = -lrsvg-2 -lm -lgio-2.0 -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 -lcairo
LIBRSVG_REQUIRED_VERSION = 2.40.0
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBXML_CFLAGS = -I/usr/include/libxml2
LIBXML_LIBS = -lxml2
LIBXML_REQUIRED_VERSION = 2.9
LIB_EXE_MACHINE_FLAG = 
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_MODULE_LDFLAGS = -shared -avoid-version
LT_SYS_LIBRARY_PATH = 
LUA_CFLAGS = -I/usr/include/lua5.2
LUA_LIBS = -llua5.2 -export-dynamic
LUA_REQUIRED_VERSION = 3.0
LUA_VERSION = 5.2
M4 = m4
MAKEINFO = ${SHELL} /home/fabio/git/ginga-mulsemedia/build-aux/missing makeinfo
MANIFEST_TOOL = :
MINGW_ROOT = 
MKDIR_P = /bin/mkdir -p
NCLUA_CFLAGS = 
NCLUA_LIBS = -lnclua
NCLUA_REQUIRED_VERSION = 1.0
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OPENGL_CFLAGS = 
OPENGL_LIBS = 
OPENGL_REQUIRED_VERSION = 17.0
OTOOL = 
OTOOL64 = 
PACKAGE = ginga
PACKAGE_BUGREPORT = bugs@telemidia.puc-rio.br
PACKAGE_NAME = Ginga
PACKAGE_STRING = Ginga 1.0.9-28be-dirty
PACKAGE_TARNAME = ginga
PACKAGE_URL = http://github.com/TeleMidia/ginga
PACKAGE_VERSION = 1.0.9-28be-dirty
PANGO_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/pango-1.0 -I/usr/include/cairo -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/libpng16
PANGO_LIBS = -lpangocairo-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lcairo
PANGO_REQUIRED_VERSION = 1.30.0
PATH_SEPARATOR = :
PERL = perl
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
SHTOOL = 
SOEXT = .so
SOUP_CFLAGS = -pthread -I/usr/include/libsoup-2.4 -I/usr/include/libxml2 -I/usr/include/glib-2.0 -I/usr/lib/x86_64-linux-gnu/glib-2.0/include
SOUP_LIBS = -lsoup-2.4 -lgio-2.0 -lgobject-2.0 -lglib-2.0
SOUP_REQUIRED_VERSION = 2.42
STRIP = strip
VALGRIND = 
VERSION = 1.0.9-28be-dirty
WARN_CFLAGS = 
WERROR_CFLAGS = 
WINDRES = 
abs_builddir = /home/fabio/git/ginga-mulsemedia/tests
abs_srcdir = /home/fabio/git/ginga-mulsemedia/tests
abs_top_builddir = /home/fabio/git/ginga-mulsemedia
abs_top_srcdir = /home/fabio/git/ginga-mulsemedia
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
cef_dir = 
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
gingadatadir = ${datarootdir}/ginga
gingasysconfdir = ${prefix}/etc/ginga
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/fabio/git/ginga-mulsemedia/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
luadatadir = ${datadir}/lua/5.2
lualibdir = ${libdir}/lua/5.2
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
ms_lib = 
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
CLEANDIRS = 
CLEANFILES = *.core *.gcda *.gcno vgcore.* $(am__append_2) \
	$(am__append_4)
DISTCLEANFILES = 
EXTRA_DIST = tests.h
MAINTAINERCLEANFILES = Makefile.in
AM_CPPFLAGS = -DABS_SRCDIR=\"$(abs_srcdir)\"\
  -DABS_TOP_SRCDIR=\"$(abs_top_srcdir)\"\
  -DTOP_SRCDIR=\"$(top_srcdir)\"\
  -DTOP_BUILDDIR=\"$(top_builddir)\"

AM_CXXFLAGS = $(GINGA_ALL_CXXFLAGS)
AM_LDFLAGS = -static $(GINGA_ALL_LDFLAGS)
LDADD = $(top_builddir)/lib/libginga.la

# Auxiliary scripts.
noinst_SCRIPTS = $(am__append_1) $(am__append_3)
perl_env_sh_get_tests_environment = \
  /^AM_TESTS_ENVIRONMENT\s*=\s*\\\n(.*?).\$$\(NULL\)/sm and printf "$$1";\
  $(NULL)

#WINROOT = $(MINGW_ROOT)
perl_env_sh_expand_variables = \
  s/^\s*//g; s/\\//g;\
  s:\$$\(SOEXT\):$(SOEXT):g;\
  s:\$$\(builddir\):$(abs_builddir):g;\
  s:\$$\(srcdir\):$(abs_srcdir):g;\
  s:\$$\(top_builddir\):$(abs_top_builddir):g;\
  s:\$$\(top_srcdir\):$(abs_top_srcdir):g;\
  $(NULL)

#perl_env_sh_expand_variables = \
#  s/^\s*//g; s/\\//g;\
#  s,\$$\(SOEXT\),$(SOEXT),g;\
#  s,\$$\(builddir\),$(WINROOT)$(abs_builddir),g;\
#  s,\$$\(srcdir\),$(WINTROOT)$(abs_srcdir),g;\
#  s,\$$\(top_builddir\),$(WINROOT)$(abs_top_builddir),g;\
#  s,\$$\(top_srcdir\),$(WINROOT)$(abs_top_srcdir),g;\
#  s,/,\\,g;\
#  $(NULL)

perl_env_sh_remove_ld_preload = \
  /^\s*export\s*LD_PRELOAD=/ or print;\
  $(NULL)

perl_env_csh_replace_env_sh = \
  s/^export (\w+)=(.*);$$/setenv $$1 $$2/;\
  $(NULL)

perl_gdb_cfg_replace_env_sh = \
  s/^export/set environment/;\
  s/(.*);$$/$$1/;\
  s/\"//g;\
  $(NULL)

VALGRIND_OPTIONS = $(am__append_5)
_VALGRIND = 
#_VALGRIND = $(VALGRIND) $(VALGRIND_OPTIONS)

# Generate env.sh, env.csh, and gdb.cfg.

# Configure valgrind and generate suppfile from suppfile.m4.

# Setup test framework.
AM_COLOR_TESTS = always
DISABLE_HARD_ERRORS = true
TEST_EXTENSIONS = .ncl
LOG_COMPILER = $(_VALGRIND)
NCL_LOG_COMPILER = $(_VALGRIND) $(top_builddir)/src/ginga

# Setup tests environment.
AM_TESTS_ENVIRONMENT = \
  export GST_DEBUG="*:WARN";\
  export G_DEBUG="error";\
  export G_MESSAGES_DEBUG="all";\
  export G_SLICE="always-malloc";\
  export MALLOC_CHECK_=1;\
  $(NULL)


# Test applications.
ncls = xfail-test-img-open.ncl xfail-test-svg-open.ncl \
	xfail-test-txt-open.ncl xfail-test-lua-open.ncl \
	xfail-test-aud-open.ncl xfail-test-vid-open.ncl \
	xfail-test-syntax-ncl-bad-tag.ncl \
	xfail-test-syntax-ncl-bad-child.ncl

# Test programs.

# lib/aux-ginga.h ----------------------------------------------------------

# lib/Document.h -----------------------------------------------------------

# lib/Predicate.h ----------------------------------------------------------

# lib/Event.h --------------------------------------------------------------

# lib/Object.h -------------------------------------------------------------

# lib/Media.h --------------------------------------------------------------

# lib/MediaSettings.h ------------------------------------------------------

# lib/Context.h ------------------------------------------------------------

# lib/Switch.h ------------------------------------------------------------

# lib/Parser.h -------------------------------------------------------------

# lib/ginga.h (Ginga Library API) ------------------------------------------
progs = xfail-test-aux-xstrtod test-aux-ginga-parse-bool \
	test-aux-ginga-parse-color test-aux-ginga-parse-list \
	test-aux-ginga-parse-table test-aux-ginga-parse-percent \
	test-aux-ginga-parse-time test-aux-xstrispercent \
	test-aux-xstrtodorpercent test-aux-xstrcasecmp \
	test-aux-xstrcaseeq test-aux-xstrhasprefix \
	test-aux-xstrhassuffix test-aux-xstrstrip test-aux-xstrsplit \
	test-aux-xpathbasename test-aux-xpathdirname \
	test-aux-xpathisabs test-aux-xpathisuri test-aux-xpathmakeabs \
	test-aux-xpathbuild test-aux-xpathbuildabs \
	test-aux-xpathfromuri test-aux-xstrtod test-aux-xstrtoll \
	test-aux-xstrassign test-aux-xstrbuild \
	test-aux-xurigetcontents test-aux-xurifromsrc \
	test-Document-new test-Document-addObject \
	xfail-test-Document-addObject test-Document-getObjectById \
	test-Document-getObjectByIdOrAlias test-Predicate-new \
	test-Predicate-atom test-Event-new test-Event-isLambda \
	test-Event-setInterval test-Event-setParameter \
	test-Event-getEventTypeAsString \
	test-Event-getEventStateAsString \
	test-Event-getEventTransitionAsString \
	test-Event-transition-Media-START \
	test-Event-transition-Context-START \
	test-Event-transition-Media-STOP \
	test-Event-transition-Context-STOP \
	test-Event-transition-Media-ABORT \
	test-Event-transition-Context-ABORT \
	test-Event-transition-Media-PAUSE \
	test-Event-transition-Context-PAUSE \
	test-Event-transition-Media-RESUME \
	test-Event-transition-Context-RESUME test-Object-addAlias \
	test-Object-addEvent test-Media-new test-Media-explicitDur \
	test-Media-nested-explicitDur test-MediaSettings-new \
	test-Context-new test-Context-naturalend \
	test-Context-nested-naturalend test-Switch-new \
	test-Parser-parseFile test-Parser-parseBuffer $(am__append_6) \
	test-Ginga-version test-Ginga-create test-Ginga-getState \
	test-Ginga-getOptions test-Ginga-getOptionBool \
	test-Ginga-setOptionBool xfail-test-Ginga-getOptionBool \
	xfail-test-Ginga-setOptionBool test-Ginga-getOptionInt \
	test-Ginga-setOptionInt xfail-test-Ginga-getOptionInt \
	xfail-test-Ginga-setOptionInt test-Ginga-getOptionString \
	test-Ginga-setOptionString xfail-test-Ginga-getOptionString \
	xfail-test-Ginga-setOptionString
xfail_test_aux_xstrtod_SOURCES = xfail-test-aux-xstrtod.cpp
test_aux_ginga_parse_bool_SOURCES = test-aux-ginga-parse-bool.cpp
test_aux_ginga_parse_color_SOURCES = test-aux-ginga-parse-color.cpp
test_aux_ginga_parse_list_SOURCES = test-aux-ginga-parse-list.cpp
test_aux_ginga_parse_table_SOURCES = test-aux-ginga-parse-table.cpp
test_aux_ginga_parse_percent_SOURCES = test-aux-ginga-parse-percent.cpp
test_aux_ginga_parse_time_SOURCES = test-aux-ginga-parse-time.cpp
test_aux_xstrispercent_SOURCES = test-aux-xstrispercent.cpp
test_aux_xstrtodorpercent_SOURCES = test-aux-xstrtodorpercent.cpp
test_aux_xstrcasecmp_SOURCES = test-aux-xstrcasecmp.cpp
test_aux_xstrcaseeq_SOURCES = test-aux-xstrcaseeq.cpp
test_aux_xstrhasprefix_SOURCES = test-aux-xstrhasprefix.cpp
test_aux_xstrhassuffix_SOURCES = test-aux-xstrhassuffix.cpp
test_aux_xstrstrip_SOURCES = test-aux-xstrstrip.cpp
test_aux_xstrsplit_SOURCES = test-aux-xstrsplit.cpp
test_aux_xpathbasename_SOURCES = test-aux-xpathbasename.cpp
test_aux_xpathdirname_SOURCES = test-aux-xpathdirname.cpp
test_aux_xpathisabs_SOURCES = test-aux-xpathisabs.cpp
test_aux_xpathisuri_SOURCES = test-aux-xpathisuri.cpp
test_aux_xpathmakeabs_SOURCES = test-aux-xpathmakeabs.cpp
test_aux_xpathbuild_SOURCES = test-aux-xpathbuild.cpp
test_aux_xpathbuildabs_SOURCES = test-aux-xpathbuildabs.cpp
test_aux_xpathfromuri_SOURCES = test-aux-xpathfromuri.cpp
test_aux_xstrtod_SOURCES = test-aux-xstrtod.cpp
test_aux_xstrtoll_SOURCES = test-aux-xstrtoll.cpp
test_aux_xstrassign_SOURCES = test-aux-xstrassign.cpp
test_aux_xstrbuild_SOURCES = test-aux-xstrbuild.cpp
test_aux_xurigetcontents_SOURCES = test-aux-xurigetcontents.cpp
test_aux_xurifromsrc_SOURCES = test-aux-xurifromsrc.cpp
test_Document_new_SOURCES = test-Document-new.cpp
test_Document_addObject_SOURCES = test-Document-addObject.cpp
xfail_test_Document_addObject_SOURCES = xfail-test-Document-addObject.cpp
test_Document_getObjectById_SOURCES = test-Document-getObjectById.cpp
test_Document_getObjectByIdOrAlias_SOURCES = \
  test-Document-getObjectByIdOrAlias.cpp

test_Predicate_new_SOURCES = test-Predicate-new.cpp
test_Predicate_atom_SOURCES = test-Predicate-atom.cpp
test_Event_new_SOURCES = test-Event-new.cpp
test_Event_isLambda_SOURCES = test-Event-isLambda.cpp
test_Event_setInterval_SOURCES = test-Event-setInterval.cpp
test_Event_setParameter_SOURCES = test-Event-setParameter.cpp
test_Event_getEventTypeAsString_SOURCES = test-Event-getEventTypeAsString.cpp
test_Event_getEventStateAsString_SOURCES = \
  test-Event-getEventStateAsString.cpp

test_Event_getEventTransitionAsString_SOURCES = \
  test-Event-getEventTransitionAsString.cpp

test_Event_transition_Media_START_SOURCES = \
  test-Event-transition-Media-START.cpp

test_Event_transition_Context_START_SOURCES = \
  test-Event-transition-Context-START.cpp

test_Event_transition_Media_STOP_SOURCES = \
  test-Event-transition-Media-STOP.cpp

test_Event_transition_Context_STOP_SOURCES = \
  test-Event-transition-Context-STOP.cpp

test_Event_transition_Media_ABORT_SOURCES = \
  test-Event-transition-Media-ABORT.cpp

test_Event_transition_Context_ABORT_SOURCES = \
  test-Event-transition-Context-ABORT.cpp

test_Event_transition_Media_PAUSE_SOURCES = \
  test-Event-transition-Media-PAUSE.cpp

test_Event_transition_Context_PAUSE_SOURCES = \
  test-Event-transition-Context-PAUSE.cpp

test_Event_transition_Media_RESUME_SOURCES = \
  test-Event-transition-Media-RESUME.cpp

test_Event_transition_Context_RESUME_SOURCES = \
  test-Event-transition-Context-RESUME.cpp

test_Object_addAlias_SOURCES = test-Object-addAlias.cpp
test_Object_addEvent_SOURCES = test-Object-addEvent.cpp
test_Media_new_SOURCES = test-Media-new.cpp
test_Media_explicitDur_SOURCES = test-Media-explicitDur.cpp
test_Media_nested_explicitDur_SOURCES = test-Media-nested-explicitDur.cpp
test_MediaSettings_new_SOURCES = test-MediaSettings-new.cpp
test_Context_new_SOURCES = test-Context-new.cpp
test_Context_naturalend_SOURCES = test-Context-naturalend.cpp
test_Context_nested_naturalend_SOURCES = test-Context-nested-naturalend.cpp
test_Switch_new_SOURCES = test-Switch-new.cpp
test_Parser_parseFile_SOURCES = test-Parser-parseFile.cpp
test_Parser_parseBuffer_SOURCES = test-Parser-parseBuffer.cpp
test_ParserLua_parseBuffer_SOURCES = test-ParserLua-parseBuffer.cpp
test_Ginga_version_SOURCES = test-Ginga-version.cpp
test_Ginga_create_SOURCES = test-Ginga-create.cpp
test_Ginga_getState_SOURCES = test-Ginga-getState.cpp
test_Ginga_getOptions_SOURCES = test-Ginga-getOptions.cpp
test_Ginga_getOptionBool_SOURCES = test-Ginga-getOptionBool.cpp
test_Ginga_setOptionBool_SOURCES = test-Ginga-setOptionBool.cpp
xfail_test_Ginga_getOptionBool_SOURCES = xfail-test-Ginga-getOptionBool.cpp
xfail_test_Ginga_setOptionBool_SOURCES = xfail-test-Ginga-setOptionBool.cpp
test_Ginga_getOptionInt_SOURCES = test-Ginga-getOptionInt.cpp
test_Ginga_setOptionInt_SOURCES = test-Ginga-setOptionInt.cpp
xfail_test_Ginga_getOptionInt_SOURCES = xfail-test-Ginga-getOptionInt.cpp
xfail_test_Ginga_setOptionInt_SOURCES = xfail-test-Ginga-setOptionInt.cpp
test_Ginga_getOptionString_SOURCES = test-Ginga-getOptionString.cpp
test_Ginga_setOptionString_SOURCES = test-Ginga-setOptionString.cpp
xfail_test_Ginga_getOptionString_SOURCES = \
  xfail-test-Ginga-getOptionString.cpp

xfail_test_Ginga_setOptionString_SOURCES = \
  xfail-test-Ginga-setOptionString.cpp

check_SCRIPTS = $(ncls)
TESTS = $(check_SCRIPTS) $(check_PROGRAMS)
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .log .ncl .ncl$(EXEEXT) .o .obj .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/build-aux/Makefile.am.common $(top_srcdir)/build-aux/Makefile.am.env $(top_srcdir)/build-aux/Makefile.am.valgrind $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu tests/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;
$(top_srcdir)/build-aux/Makefile.am.common $(top_srcdir)/build-aux/Makefile.am.env $(top_srcdir)/build-aux/Makefile.am.valgrind $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

test-Context-naturalend$(EXEEXT): $(test_Context_naturalend_OBJECTS) $(test_Context_naturalend_DEPENDENCIES) $(EXTRA_test_Context_naturalend_DEPENDENCIES) 
	@rm -f test-Context-naturalend$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Context_naturalend_OBJECTS) $(test_Context_naturalend_LDADD) $(LIBS)

test-Context-nested-naturalend$(EXEEXT): $(test_Context_nested_naturalend_OBJECTS) $(test_Context_nested_naturalend_DEPENDENCIES) $(EXTRA_test_Context_nested_naturalend_DEPENDENCIES) 
	@rm -f test-Context-nested-naturalend$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Context_nested_naturalend_OBJECTS) $(test_Context_nested_naturalend_LDADD) $(LIBS)

test-Context-new$(EXEEXT): $(test_Context_new_OBJECTS) $(test_Context_new_DEPENDENCIES) $(EXTRA_test_Context_new_DEPENDENCIES) 
	@rm -f test-Context-new$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Context_new_OBJECTS) $(test_Context_new_LDADD) $(LIBS)

test-Document-addObject$(EXEEXT): $(test_Document_addObject_OBJECTS) $(test_Document_addObject_DEPENDENCIES) $(EXTRA_test_Document_addObject_DEPENDENCIES) 
	@rm -f test-Document-addObject$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Document_addObject_OBJECTS) $(test_Document_addObject_LDADD) $(LIBS)

test-Document-getObjectById$(EXEEXT): $(test_Document_getObjectById_OBJECTS) $(test_Document_getObjectById_DEPENDENCIES) $(EXTRA_test_Document_getObjectById_DEPENDENCIES) 
	@rm -f test-Document-getObjectById$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Document_getObjectById_OBJECTS) $(test_Document_getObjectById_LDADD) $(LIBS)

test-Document-getObjectByIdOrAlias$(EXEEXT): $(test_Document_getObjectByIdOrAlias_OBJECTS) $(test_Document_getObjectByIdOrAlias_DEPENDENCIES) $(EXTRA_test_Document_getObjectByIdOrAlias_DEPENDENCIES) 
	@rm -f test-Document-getObjectByIdOrAlias$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Document_getObjectByIdOrAlias_OBJECTS) $(test_Document_getObjectByIdOrAlias_LDADD) $(LIBS)

test-Document-new$(EXEEXT): $(test_Document_new_OBJECTS) $(test_Document_new_DEPENDENCIES) $(EXTRA_test_Document_new_DEPENDENCIES) 
	@rm -f test-Document-new$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Document_new_OBJECTS) $(test_Document_new_LDADD) $(LIBS)

test-Event-getEventStateAsString$(EXEEXT): $(test_Event_getEventStateAsString_OBJECTS) $(test_Event_getEventStateAsString_DEPENDENCIES) $(EXTRA_test_Event_getEventStateAsString_DEPENDENCIES) 
	@rm -f test-Event-getEventStateAsString$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Event_getEventStateAsString_OBJECTS) $(test_Event_getEventStateAsString_LDADD) $(LIBS)

test-Event-getEventTransitionAsString$(EXEEXT): $(test_Event_getEventTransitionAsString_OBJECTS) $(test_Event_getEventTransitionAsString_DEPENDENCIES) $(EXTRA_test_Event_getEventTransitionAsString_DEPENDENCIES) 
	@rm -f test-Event-getEventTransitionAsString$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Event_getEventTransitionAsString_OBJECTS) $(test_Event_getEventTransitionAsString_LDADD) $(LIBS)

test-Event-getEventTypeAsString$(EXEEXT): $(test_Event_getEventTypeAsString_OBJECTS) $(test_Event_getEventTypeAsString_DEPENDENCIES) $(EXTRA_test_Event_getEventTypeAsString_DEPENDENCIES) 
	@rm -f test-Event-getEventTypeAsString$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Event_getEventTypeAsString_OBJECTS) $(test_Event_getEventTypeAsString_LDADD) $(LIBS)

test-Event-isLambda$(EXEEXT): $(test_Event_isLambda_OBJECTS) $(test_Event_isLambda_DEPENDENCIES) $(EXTRA_test_Event_isLambda_DEPENDENCIES) 
	@rm -f test-Event-isLambda$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Event_isLambda_OBJECTS) $(test_Event_isLambda_LDADD) $(LIBS)

test-Event-new$(EXEEXT): $(test_Event_new_OBJECTS) $(test_Event_new_DEPENDENCIES) $(EXTRA_test_Event_new_DEPENDENCIES) 
	@rm -f test-Event-new$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Event_new_OBJECTS) $(test_Event_new_LDADD) $(LIBS)

test-Event-setInterval$(EXEEXT): $(test_Event_setInterval_OBJECTS) $(test_Event_setInterval_DEPENDENCIES) $(EXTRA_test_Event_setInterval_DEPENDENCIES) 
	@rm -f test-Event-setInterval$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Event_setInterval_OBJECTS) $(test_Event_setInterval_LDADD) $(LIBS)

test-Event-setParameter$(EXEEXT): $(test_Event_setParameter_OBJECTS) $(test_Event_setParameter_DEPENDENCIES) $(EXTRA_test_Event_setParameter_DEPENDENCIES) 
	@rm -f test-Event-setParameter$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Event_setParameter_OBJECTS) $(test_Event_setParameter_LDADD) $(LIBS)

test-Event-transition-Context-ABORT$(EXEEXT): $(test_Event_transition_Context_ABORT_OBJECTS) $(test_Event_transition_Context_ABORT_DEPENDENCIES) $(EXTRA_test_Event_transition_Context_ABORT_DEPENDENCIES) 
	@rm -f test-Event-transition-Context-ABORT$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Event_transition_Context_ABORT_OBJECTS) $(test_Event_transition_Context_ABORT_LDADD) $(LIBS)

test-Event-transition-Context-PAUSE$(EXEEXT): $(test_Event_transition_Context_PAUSE_OBJECTS) $(test_Event_transition_Context_PAUSE_DEPENDENCIES) $(EXTRA_test_Event_transition_Context_PAUSE_DEPENDENCIES) 
	@rm -f test-Event-transition-Context-PAUSE$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Event_transition_Context_PAUSE_OBJECTS) $(test_Event_transition_Context_PAUSE_LDADD) $(LIBS)

test-Event-transition-Context-RESUME$(EXEEXT): $(test_Event_transition_Context_RESUME_OBJECTS) $(test_Event_transition_Context_RESUME_DEPENDENCIES) $(EXTRA_test_Event_transition_Context_RESUME_DEPENDENCIES) 
	@rm -f test-Event-transition-Context-RESUME$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Event_transition_Context_RESUME_OBJECTS) $(test_Event_transition_Context_RESUME_LDADD) $(LIBS)

test-Event-transition-Context-START$(EXEEXT): $(test_Event_transition_Context_START_OBJECTS) $(test_Event_transition_Context_START_DEPENDENCIES) $(EXTRA_test_Event_transition_Context_START_DEPENDENCIES) 
	@rm -f test-Event-transition-Context-START$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Event_transition_Context_START_OBJECTS) $(test_Event_transition_Context_START_LDADD) $(LIBS)

test-Event-transition-Context-STOP$(EXEEXT): $(test_Event_transition_Context_STOP_OBJECTS) $(test_Event_transition_Context_STOP_DEPENDENCIES) $(EXTRA_test_Event_transition_Context_STOP_DEPENDENCIES) 
	@rm -f test-Event-transition-Context-STOP$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Event_transition_Context_STOP_OBJECTS) $(test_Event_transition_Context_STOP_LDADD) $(LIBS)

test-Event-transition-Media-ABORT$(EXEEXT): $(test_Event_transition_Media_ABORT_OBJECTS) $(test_Event_transition_Media_ABORT_DEPENDENCIES) $(EXTRA_test_Event_transition_Media_ABORT_DEPENDENCIES) 
	@rm -f test-Event-transition-Media-ABORT$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Event_transition_Media_ABORT_OBJECTS) $(test_Event_transition_Media_ABORT_LDADD) $(LIBS)

test-Event-transition-Media-PAUSE$(EXEEXT): $(test_Event_transition_Media_PAUSE_OBJECTS) $(test_Event_transition_Media_PAUSE_DEPENDENCIES) $(EXTRA_test_Event_transition_Media_PAUSE_DEPENDENCIES) 
	@rm -f test-Event-transition-Media-PAUSE$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Event_transition_Media_PAUSE_OBJECTS) $(test_Event_transition_Media_PAUSE_LDADD) $(LIBS)

test-Event-transition-Media-RESUME$(EXEEXT): $(test_Event_transition_Media_RESUME_OBJECTS) $(test_Event_transition_Media_RESUME_DEPENDENCIES) $(EXTRA_test_Event_transition_Media_RESUME_DEPENDENCIES) 
	@rm -f test-Event-transition-Media-RESUME$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Event_transition_Media_RESUME_OBJECTS) $(test_Event_transition_Media_RESUME_LDADD) $(LIBS)

test-Event-transition-Media-START$(EXEEXT): $(test_Event_transition_Media_START_OBJECTS) $(test_Event_transition_Media_START_DEPENDENCIES) $(EXTRA_test_Event_transition_Media_START_DEPENDENCIES) 
	@rm -f test-Event-transition-Media-START$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Event_transition_Media_START_OBJECTS) $(test_Event_transition_Media_START_LDADD) $(LIBS)

test-Event-transition-Media-STOP$(EXEEXT): $(test_Event_transition_Media_STOP_OBJECTS) $(test_Event_transition_Media_STOP_DEPENDENCIES) $(EXTRA_test_Event_transition_Media_STOP_DEPENDENCIES) 
	@rm -f test-Event-transition-Media-STOP$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Event_transition_Media_STOP_OBJECTS) $(test_Event_transition_Media_STOP_LDADD) $(LIBS)

test-Ginga-create$(EXEEXT): $(test_Ginga_create_OBJECTS) $(test_Ginga_create_DEPENDENCIES) $(EXTRA_test_Ginga_create_DEPENDENCIES) 
	@rm -f test-Ginga-create$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Ginga_create_OBJECTS) $(test_Ginga_create_LDADD) $(LIBS)

test-Ginga-getOptionBool$(EXEEXT): $(test_Ginga_getOptionBool_OBJECTS) $(test_Ginga_getOptionBool_DEPENDENCIES) $(EXTRA_test_Ginga_getOptionBool_DEPENDENCIES) 
	@rm -f test-Ginga-getOptionBool$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Ginga_getOptionBool_OBJECTS) $(test_Ginga_getOptionBool_LDADD) $(LIBS)

test-Ginga-getOptionInt$(EXEEXT): $(test_Ginga_getOptionInt_OBJECTS) $(test_Ginga_getOptionInt_DEPENDENCIES) $(EXTRA_test_Ginga_getOptionInt_DEPENDENCIES) 
	@rm -f test-Ginga-getOptionInt$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Ginga_getOptionInt_OBJECTS) $(test_Ginga_getOptionInt_LDADD) $(LIBS)

test-Ginga-getOptionString$(EXEEXT): $(test_Ginga_getOptionString_OBJECTS) $(test_Ginga_getOptionString_DEPENDENCIES) $(EXTRA_test_Ginga_getOptionString_DEPENDENCIES) 
	@rm -f test-Ginga-getOptionString$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Ginga_getOptionString_OBJECTS) $(test_Ginga_getOptionString_LDADD) $(LIBS)

test-Ginga-getOptions$(EXEEXT): $(test_Ginga_getOptions_OBJECTS) $(test_Ginga_getOptions_DEPENDENCIES) $(EXTRA_test_Ginga_getOptions_DEPENDENCIES) 
	@rm -f test-Ginga-getOptions$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Ginga_getOptions_OBJECTS) $(test_Ginga_getOptions_LDADD) $(LIBS)

test-Ginga-getState$(EXEEXT): $(test_Ginga_getState_OBJECTS) $(test_Ginga_getState_DEPENDENCIES) $(EXTRA_test_Ginga_getState_DEPENDENCIES) 
	@rm -f test-Ginga-getState$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Ginga_getState_OBJECTS) $(test_Ginga_getState_LDADD) $(LIBS)

test-Ginga-setOptionBool$(EXEEXT): $(test_Ginga_setOptionBool_OBJECTS) $(test_Ginga_setOptionBool_DEPENDENCIES) $(EXTRA_test_Ginga_setOptionBool_DEPENDENCIES) 
	@rm -f test-Ginga-setOptionBool$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Ginga_setOptionBool_OBJECTS) $(test_Ginga_setOptionBool_LDADD) $(LIBS)

test-Ginga-setOptionInt$(EXEEXT): $(test_Ginga_setOptionInt_OBJECTS) $(test_Ginga_setOptionInt_DEPENDENCIES) $(EXTRA_test_Ginga_setOptionInt_DEPENDENCIES) 
	@rm -f test-Ginga-setOptionInt$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Ginga_setOptionInt_OBJECTS) $(test_Ginga_setOptionInt_LDADD) $(LIBS)

test-Ginga-setOptionString$(EXEEXT): $(test_Ginga_setOptionString_OBJECTS) $(test_Ginga_setOptionString_DEPENDENCIES) $(EXTRA_test_Ginga_setOptionString_DEPENDENCIES) 
	@rm -f test-Ginga-setOptionString$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Ginga_setOptionString_OBJECTS) $(test_Ginga_setOptionString_LDADD) $(LIBS)

test-Ginga-version$(EXEEXT): $(test_Ginga_version_OBJECTS) $(test_Ginga_version_DEPENDENCIES) $(EXTRA_test_Ginga_version_DEPENDENCIES) 
	@rm -f test-Ginga-version$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Ginga_version_OBJECTS) $(test_Ginga_version_LDADD) $(LIBS)

test-Media-explicitDur$(EXEEXT): $(test_Media_explicitDur_OBJECTS) $(test_Media_explicitDur_DEPENDENCIES) $(EXTRA_test_Media_explicitDur_DEPENDENCIES) 
	@rm -f test-Media-explicitDur$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Media_explicitDur_OBJECTS) $(test_Media_explicitDur_LDADD) $(LIBS)

test-Media-nested-explicitDur$(EXEEXT): $(test_Media_nested_explicitDur_OBJECTS) $(test_Media_nested_explicitDur_DEPENDENCIES) $(EXTRA_test_Media_nested_explicitDur_DEPENDENCIES) 
	@rm -f test-Media-nested-explicitDur$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Media_nested_explicitDur_OBJECTS) $(test_Media_nested_explicitDur_LDADD) $(LIBS)

test-Media-new$(EXEEXT): $(test_Media_new_OBJECTS) $(test_Media_new_DEPENDENCIES) $(EXTRA_test_Media_new_DEPENDENCIES) 
	@rm -f test-Media-new$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Media_new_OBJECTS) $(test_Media_new_LDADD) $(LIBS)

test-MediaSettings-new$(EXEEXT): $(test_MediaSettings_new_OBJECTS) $(test_MediaSettings_new_DEPENDENCIES) $(EXTRA_test_MediaSettings_new_DEPENDENCIES) 
	@rm -f test-MediaSettings-new$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_MediaSettings_new_OBJECTS) $(test_MediaSettings_new_LDADD) $(LIBS)

test-Object-addAlias$(EXEEXT): $(test_Object_addAlias_OBJECTS) $(test_Object_addAlias_DEPENDENCIES) $(EXTRA_test_Object_addAlias_DEPENDENCIES) 
	@rm -f test-Object-addAlias$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Object_addAlias_OBJECTS) $(test_Object_addAlias_LDADD) $(LIBS)

test-Object-addEvent$(EXEEXT): $(test_Object_addEvent_OBJECTS) $(test_Object_addEvent_DEPENDENCIES) $(EXTRA_test_Object_addEvent_DEPENDENCIES) 
	@rm -f test-Object-addEvent$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Object_addEvent_OBJECTS) $(test_Object_addEvent_LDADD) $(LIBS)

test-Parser-parseBuffer$(EXEEXT): $(test_Parser_parseBuffer_OBJECTS) $(test_Parser_parseBuffer_DEPENDENCIES) $(EXTRA_test_Parser_parseBuffer_DEPENDENCIES) 
	@rm -f test-Parser-parseBuffer$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Parser_parseBuffer_OBJECTS) $(test_Parser_parseBuffer_LDADD) $(LIBS)

test-Parser-parseFile$(EXEEXT): $(test_Parser_parseFile_OBJECTS) $(test_Parser_parseFile_DEPENDENCIES) $(EXTRA_test_Parser_parseFile_DEPENDENCIES) 
	@rm -f test-Parser-parseFile$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Parser_parseFile_OBJECTS) $(test_Parser_parseFile_LDADD) $(LIBS)

test-ParserLua-parseBuffer$(EXEEXT): $(test_ParserLua_parseBuffer_OBJECTS) $(test_ParserLua_parseBuffer_DEPENDENCIES) $(EXTRA_test_ParserLua_parseBuffer_DEPENDENCIES) 
	@rm -f test-ParserLua-parseBuffer$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_ParserLua_parseBuffer_OBJECTS) $(test_ParserLua_parseBuffer_LDADD) $(LIBS)

test-Predicate-atom$(EXEEXT): $(test_Predicate_atom_OBJECTS) $(test_Predicate_atom_DEPENDENCIES) $(EXTRA_test_Predicate_atom_DEPENDENCIES) 
	@rm -f test-Predicate-atom$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Predicate_atom_OBJECTS) $(test_Predicate_atom_LDADD) $(LIBS)

test-Predicate-new$(EXEEXT): $(test_Predicate_new_OBJECTS) $(test_Predicate_new_DEPENDENCIES) $(EXTRA_test_Predicate_new_DEPENDENCIES) 
	@rm -f test-Predicate-new$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Predicate_new_OBJECTS) $(test_Predicate_new_LDADD) $(LIBS)

test-Switch-new$(EXEEXT): $(test_Switch_new_OBJECTS) $(test_Switch_new_DEPENDENCIES) $(EXTRA_test_Switch_new_DEPENDENCIES) 
	@rm -f test-Switch-new$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_Switch_new_OBJECTS) $(test_Switch_new_LDADD) $(LIBS)

test-aux-ginga-parse-bool$(EXEEXT): $(test_aux_ginga_parse_bool_OBJECTS) $(test_aux_ginga_parse_bool_DEPENDENCIES) $(EXTRA_test_aux_ginga_parse_bool_DEPENDENCIES) 
	@rm -f test-aux-ginga-parse-bool$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_aux_ginga_parse_bool_OBJECTS) $(test_aux_ginga_parse_bool_LDADD) $(LIBS)

test-aux-ginga-parse-color$(EXEEXT): $(test_aux_ginga_parse_color_OBJECTS) $(test_aux_ginga_parse_color_DEPENDENCIES) $(EXTRA_test_aux_ginga_parse_color_DEPENDENCIES) 
	@rm -f test-aux-ginga-parse-color$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_aux_ginga_parse_color_OBJECTS) $(test_aux_ginga_parse_color_LDADD) $(LIBS)

test-aux-ginga-parse-list$(EXEEXT): $(test_aux_ginga_parse_list_OBJECTS) $(test_aux_ginga_parse_list_DEPENDENCIES) $(EXTRA_test_aux_ginga_parse_list_DEPENDENCIES) 
	@rm -f test-aux-ginga-parse-list$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_aux_ginga_parse_list_OBJECTS) $(test_aux_ginga_parse_list_LDADD) $(LIBS)

test-aux-ginga-parse-percent$(EXEEXT): $(test_aux_ginga_parse_percent_OBJECTS) $(test_aux_ginga_parse_percent_DEPENDENCIES) $(EXTRA_test_aux_ginga_parse_percent_DEPENDENCIES) 
	@rm -f test-aux-ginga-parse-percent$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_aux_ginga_parse_percent_OBJECTS) $(test_aux_ginga_parse_percent_LDADD) $(LIBS)

test-aux-ginga-parse-table$(EXEEXT): $(test_aux_ginga_parse_table_OBJECTS) $(test_aux_ginga_parse_table_DEPENDENCIES) $(EXTRA_test_aux_ginga_parse_table_DEPENDENCIES) 
	@rm -f test-aux-ginga-parse-table$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_aux_ginga_parse_table_OBJECTS) $(test_aux_ginga_parse_table_LDADD) $(LIBS)

test-aux-ginga-parse-time$(EXEEXT): $(test_aux_ginga_parse_time_OBJECTS) $(test_aux_ginga_parse_time_DEPENDENCIES) $(EXTRA_test_aux_ginga_parse_time_DEPENDENCIES) 
	@rm -f test-aux-ginga-parse-time$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_aux_ginga_parse_time_OBJECTS) $(test_aux_ginga_parse_time_LDADD) $(LIBS)

test-aux-xpathbasename$(EXEEXT): $(test_aux_xpathbasename_OBJECTS) $(test_aux_xpathbasename_DEPENDENCIES) $(EXTRA_test_aux_xpathbasename_DEPENDENCIES) 
	@rm -f test-aux-xpathbasename$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_aux_xpathbasename_OBJECTS) $(test_aux_xpathbasename_LDADD) $(LIBS)

test-aux-xpathbuild$(EXEEXT): $(test_aux_xpathbuild_OBJECTS) $(test_aux_xpathbuild_DEPENDENCIES) $(EXTRA_test_aux_xpathbuild_DEPENDENCIES) 
	@rm -f test-aux-xpathbuild$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_aux_xpathbuild_OBJECTS) $(test_aux_xpathbuild_LDADD) $(LIBS)

test-aux-xpathbuildabs$(EXEEXT): $(test_aux_xpathbuildabs_OBJECTS) $(test_aux_xpathbuildabs_DEPENDENCIES) $(EXTRA_test_aux_xpathbuildabs_DEPENDENCIES) 
	@rm -f test-aux-xpathbuildabs$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_aux_xpathbuildabs_OBJECTS) $(test_aux_xpathbuildabs_LDADD) $(LIBS)

test-aux-xpathdirname$(EXEEXT): $(test_aux_xpathdirname_OBJECTS) $(test_aux_xpathdirname_DEPENDENCIES) $(EXTRA_test_aux_xpathdirname_DEPENDENCIES) 
	@rm -f test-aux-xpathdirname$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_aux_xpathdirname_OBJECTS) $(test_aux_xpathdirname_LDADD) $(LIBS)

test-aux-xpathfromuri$(EXEEXT): $(test_aux_xpathfromuri_OBJECTS) $(test_aux_xpathfromuri_DEPENDENCIES) $(EXTRA_test_aux_xpathfromuri_DEPENDENCIES) 
	@rm -f test-aux-xpathfromuri$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_aux_xpathfromuri_OBJECTS) $(test_aux_xpathfromuri_LDADD) $(LIBS)

test-aux-xpathisabs$(EXEEXT): $(test_aux_xpathisabs_OBJECTS) $(test_aux_xpathisabs_DEPENDENCIES) $(EXTRA_test_aux_xpathisabs_DEPENDENCIES) 
	@rm -f test-aux-xpathisabs$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_aux_xpathisabs_OBJECTS) $(test_aux_xpathisabs_LDADD) $(LIBS)

test-aux-xpathisuri$(EXEEXT): $(test_aux_xpathisuri_OBJECTS) $(test_aux_xpathisuri_DEPENDENCIES) $(EXTRA_test_aux_xpathisuri_DEPENDENCIES) 
	@rm -f test-aux-xpathisuri$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_aux_xpathisuri_OBJECTS) $(test_aux_xpathisuri_LDADD) $(LIBS)

test-aux-xpathmakeabs$(EXEEXT): $(test_aux_xpathmakeabs_OBJECTS) $(test_aux_xpathmakeabs_DEPENDENCIES) $(EXTRA_test_aux_xpathmakeabs_DEPENDENCIES) 
	@rm -f test-aux-xpathmakeabs$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_aux_xpathmakeabs_OBJECTS) $(test_aux_xpathmakeabs_LDADD) $(LIBS)

test-aux-xstrassign$(EXEEXT): $(test_aux_xstrassign_OBJECTS) $(test_aux_xstrassign_DEPENDENCIES) $(EXTRA_test_aux_xstrassign_DEPENDENCIES) 
	@rm -f test-aux-xstrassign$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_aux_xstrassign_OBJECTS) $(test_aux_xstrassign_LDADD) $(LIBS)

test-aux-xstrbuild$(EXEEXT): $(test_aux_xstrbuild_OBJECTS) $(test_aux_xstrbuild_DEPENDENCIES) $(EXTRA_test_aux_xstrbuild_DEPENDENCIES) 
	@rm -f test-aux-xstrbuild$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_aux_xstrbuild_OBJECTS) $(test_aux_xstrbuild_LDADD) $(LIBS)

test-aux-xstrcasecmp$(EXEEXT): $(test_aux_xstrcasecmp_OBJECTS) $(test_aux_xstrcasecmp_DEPENDENCIES) $(EXTRA_test_aux_xstrcasecmp_DEPENDENCIES) 
	@rm -f test-aux-xstrcasecmp$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_aux_xstrcasecmp_OBJECTS) $(test_aux_xstrcasecmp_LDADD) $(LIBS)

test-aux-xstrcaseeq$(EXEEXT): $(test_aux_xstrcaseeq_OBJECTS) $(test_aux_xstrcaseeq_DEPENDENCIES) $(EXTRA_test_aux_xstrcaseeq_DEPENDENCIES) 
	@rm -f test-aux-xstrcaseeq$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_aux_xstrcaseeq_OBJECTS) $(test_aux_xstrcaseeq_LDADD) $(LIBS)

test-aux-xstrhasprefix$(EXEEXT): $(test_aux_xstrhasprefix_OBJECTS) $(test_aux_xstrhasprefix_DEPENDENCIES) $(EXTRA_test_aux_xstrhasprefix_DEPENDENCIES) 
	@rm -f test-aux-xstrhasprefix$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_aux_xstrhasprefix_OBJECTS) $(test_aux_xstrhasprefix_LDADD) $(LIBS)

test-aux-xstrhassuffix$(EXEEXT): $(test_aux_xstrhassuffix_OBJECTS) $(test_aux_xstrhassuffix_DEPENDENCIES) $(EXTRA_test_aux_xstrhassuffix_DEPENDENCIES) 
	@rm -f test-aux-xstrhassuffix$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_aux_xstrhassuffix_OBJECTS) $(test_aux_xstrhassuffix_LDADD) $(LIBS)

test-aux-xstrispercent$(EXEEXT): $(test_aux_xstrispercent_OBJECTS) $(test_aux_xstrispercent_DEPENDENCIES) $(EXTRA_test_aux_xstrispercent_DEPENDENCIES) 
	@rm -f test-aux-xstrispercent$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_aux_xstrispercent_OBJECTS) $(test_aux_xstrispercent_LDADD) $(LIBS)

test-aux-xstrsplit$(EXEEXT): $(test_aux_xstrsplit_OBJECTS) $(test_aux_xstrsplit_DEPENDENCIES) $(EXTRA_test_aux_xstrsplit_DEPENDENCIES) 
	@rm -f test-aux-xstrsplit$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_aux_xstrsplit_OBJECTS) $(test_aux_xstrsplit_LDADD) $(LIBS)

test-aux-xstrstrip$(EXEEXT): $(test_aux_xstrstrip_OBJECTS) $(test_aux_xstrstrip_DEPENDENCIES) $(EXTRA_test_aux_xstrstrip_DEPENDENCIES) 
	@rm -f test-aux-xstrstrip$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_aux_xstrstrip_OBJECTS) $(test_aux_xstrstrip_LDADD) $(LIBS)

test-aux-xstrtod$(EXEEXT): $(test_aux_xstrtod_OBJECTS) $(test_aux_xstrtod_DEPENDENCIES) $(EXTRA_test_aux_xstrtod_DEPENDENCIES) 
	@rm -f test-aux-xstrtod$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_aux_xstrtod_OBJECTS) $(test_aux_xstrtod_LDADD) $(LIBS)

test-aux-xstrtodorpercent$(EXEEXT): $(test_aux_xstrtodorpercent_OBJECTS) $(test_aux_xstrtodorpercent_DEPENDENCIES) $(EXTRA_test_aux_xstrtodorpercent_DEPENDENCIES) 
	@rm -f test-aux-xstrtodorpercent$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_aux_xstrtodorpercent_OBJECTS) $(test_aux_xstrtodorpercent_LDADD) $(LIBS)

test-aux-xstrtoll$(EXEEXT): $(test_aux_xstrtoll_OBJECTS) $(test_aux_xstrtoll_DEPENDENCIES) $(EXTRA_test_aux_xstrtoll_DEPENDENCIES) 
	@rm -f test-aux-xstrtoll$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_aux_xstrtoll_OBJECTS) $(test_aux_xstrtoll_LDADD) $(LIBS)

test-aux-xurifromsrc$(EXEEXT): $(test_aux_xurifromsrc_OBJECTS) $(test_aux_xurifromsrc_DEPENDENCIES) $(EXTRA_test_aux_xurifromsrc_DEPENDENCIES) 
	@rm -f test-aux-xurifromsrc$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_aux_xurifromsrc_OBJECTS) $(test_aux_xurifromsrc_LDADD) $(LIBS)

test-aux-xurigetcontents$(EXEEXT): $(test_aux_xurigetcontents_OBJECTS) $(test_aux_xurigetcontents_DEPENDENCIES) $(EXTRA_test_aux_xurigetcontents_DEPENDENCIES) 
	@rm -f test-aux-xurigetcontents$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(test_aux_xurigetcontents_OBJECTS) $(test_aux_xurigetcontents_LDADD) $(LIBS)

xfail-test-Document-addObject$(EXEEXT): $(xfail_test_Document_addObject_OBJECTS) $(xfail_test_Document_addObject_DEPENDENCIES) $(EXTRA_xfail_test_Document_addObject_DEPENDENCIES) 
	@rm -f xfail-test-Document-addObject$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(xfail_test_Document_addObject_OBJECTS) $(xfail_test_Document_addObject_LDADD) $(LIBS)

xfail-test-Ginga-getOptionBool$(EXEEXT): $(xfail_test_Ginga_getOptionBool_OBJECTS) $(xfail_test_Ginga_getOptionBool_DEPENDENCIES) $(EXTRA_xfail_test_Ginga_getOptionBool_DEPENDENCIES) 
	@rm -f xfail-test-Ginga-getOptionBool$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(xfail_test_Ginga_getOptionBool_OBJECTS) $(xfail_test_Ginga_getOptionBool_LDADD) $(LIBS)

xfail-test-Ginga-getOptionInt$(EXEEXT): $(xfail_test_Ginga_getOptionInt_OBJECTS) $(xfail_test_Ginga_getOptionInt_DEPENDENCIES) $(EXTRA_xfail_test_Ginga_getOptionInt_DEPENDENCIES) 
	@rm -f xfail-test-Ginga-getOptionInt$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(xfail_test_Ginga_getOptionInt_OBJECTS) $(xfail_test_Ginga_getOptionInt_LDADD) $(LIBS)

xfail-test-Ginga-getOptionString$(EXEEXT): $(xfail_test_Ginga_getOptionString_OBJECTS) $(xfail_test_Ginga_getOptionString_DEPENDENCIES) $(EXTRA_xfail_test_Ginga_getOptionString_DEPENDENCIES) 
	@rm -f xfail-test-Ginga-getOptionString$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(xfail_test_Ginga_getOptionString_OBJECTS) $(xfail_test_Ginga_getOptionString_LDADD) $(LIBS)

xfail-test-Ginga-setOptionBool$(EXEEXT): $(xfail_test_Ginga_setOptionBool_OBJECTS) $(xfail_test_Ginga_setOptionBool_DEPENDENCIES) $(EXTRA_xfail_test_Ginga_setOptionBool_DEPENDENCIES) 
	@rm -f xfail-test-Ginga-setOptionBool$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(xfail_test_Ginga_setOptionBool_OBJECTS) $(xfail_test_Ginga_setOptionBool_LDADD) $(LIBS)

xfail-test-Ginga-setOptionInt$(EXEEXT): $(xfail_test_Ginga_setOptionInt_OBJECTS) $(xfail_test_Ginga_setOptionInt_DEPENDENCIES) $(EXTRA_xfail_test_Ginga_setOptionInt_DEPENDENCIES) 
	@rm -f xfail-test-Ginga-setOptionInt$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(xfail_test_Ginga_setOptionInt_OBJECTS) $(xfail_test_Ginga_setOptionInt_LDADD) $(LIBS)

xfail-test-Ginga-setOptionString$(EXEEXT): $(xfail_test_Ginga_setOptionString_OBJECTS) $(xfail_test_Ginga_setOptionString_DEPENDENCIES) $(EXTRA_xfail_test_Ginga_setOptionString_DEPENDENCIES) 
	@rm -f xfail-test-Ginga-setOptionString$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(xfail_test_Ginga_setOptionString_OBJECTS) $(xfail_test_Ginga_setOptionString_LDADD) $(LIBS)

xfail-test-aux-xstrtod$(EXEEXT): $(xfail_test_aux_xstrtod_OBJECTS) $(xfail_test_aux_xstrtod_DEPENDENCIES) $(EXTRA_xfail_test_aux_xstrtod_DEPENDENCIES) 
	@rm -f xfail-test-aux-xstrtod$(EXEEXT)
	$(AM_V_CXXLD)$(CXXLINK) $(xfail_test_aux_xstrtod_OBJECTS) $(xfail_test_aux_xstrtod_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/test-Context-naturalend.Po
include ./$(DEPDIR)/test-Context-nested-naturalend.Po
include ./$(DEPDIR)/test-Context-new.Po
include ./$(DEPDIR)/test-Document-addObject.Po
include ./$(DEPDIR)/test-Document-getObjectById.Po
include ./$(DEPDIR)/test-Document-getObjectByIdOrAlias.Po
include ./$(DEPDIR)/test-Document-new.Po
include ./$(DEPDIR)/test-Event-getEventStateAsString.Po
include ./$(DEPDIR)/test-Event-getEventTransitionAsString.Po
include ./$(DEPDIR)/test-Event-getEventTypeAsString.Po
include ./$(DEPDIR)/test-Event-isLambda.Po
include ./$(DEPDIR)/test-Event-new.Po
include ./$(DEPDIR)/test-Event-setInterval.Po
include ./$(DEPDIR)/test-Event-setParameter.Po
include ./$(DEPDIR)/test-Event-transition-Context-ABORT.Po
include ./$(DEPDIR)/test-Event-transition-Context-PAUSE.Po
include ./$(DEPDIR)/test-Event-transition-Context-RESUME.Po
include ./$(DEPDIR)/test-Event-transition-Context-START.Po
include ./$(DEPDIR)/test-Event-transition-Context-STOP.Po
include ./$(DEPDIR)/test-Event-transition-Media-ABORT.Po
include ./$(DEPDIR)/test-Event-transition-Media-PAUSE.Po
include ./$(DEPDIR)/test-Event-transition-Media-RESUME.Po
include ./$(DEPDIR)/test-Event-transition-Media-START.Po
include ./$(DEPDIR)/test-Event-transition-Media-STOP.Po
include ./$(DEPDIR)/test-Ginga-create.Po
include ./$(DEPDIR)/test-Ginga-getOptionBool.Po
include ./$(DEPDIR)/test-Ginga-getOptionInt.Po
include ./$(DEPDIR)/test-Ginga-getOptionString.Po
include ./$(DEPDIR)/test-Ginga-getOptions.Po
include ./$(DEPDIR)/test-Ginga-getState.Po
include ./$(DEPDIR)/test-Ginga-setOptionBool.Po
include ./$(DEPDIR)/test-Ginga-setOptionInt.Po
include ./$(DEPDIR)/test-Ginga-setOptionString.Po
include ./$(DEPDIR)/test-Ginga-version.Po
include ./$(DEPDIR)/test-Media-explicitDur.Po
include ./$(DEPDIR)/test-Media-nested-explicitDur.Po
include ./$(DEPDIR)/test-Media-new.Po
include ./$(DEPDIR)/test-MediaSettings-new.Po
include ./$(DEPDIR)/test-Object-addAlias.Po
include ./$(DEPDIR)/test-Object-addEvent.Po
include ./$(DEPDIR)/test-Parser-parseBuffer.Po
include ./$(DEPDIR)/test-Parser-parseFile.Po
include ./$(DEPDIR)/test-ParserLua-parseBuffer.Po
include ./$(DEPDIR)/test-Predicate-atom.Po
include ./$(DEPDIR)/test-Predicate-new.Po
include ./$(DEPDIR)/test-Switch-new.Po
include ./$(DEPDIR)/test-aux-ginga-parse-bool.Po
include ./$(DEPDIR)/test-aux-ginga-parse-color.Po
include ./$(DEPDIR)/test-aux-ginga-parse-list.Po
include ./$(DEPDIR)/test-aux-ginga-parse-percent.Po
include ./$(DEPDIR)/test-aux-ginga-parse-table.Po
include ./$(DEPDIR)/test-aux-ginga-parse-time.Po
include ./$(DEPDIR)/test-aux-xpathbasename.Po
include ./$(DEPDIR)/test-aux-xpathbuild.Po
include ./$(DEPDIR)/test-aux-xpathbuildabs.Po
include ./$(DEPDIR)/test-aux-xpathdirname.Po
include ./$(DEPDIR)/test-aux-xpathfromuri.Po
include ./$(DEPDIR)/test-aux-xpathisabs.Po
include ./$(DEPDIR)/test-aux-xpathisuri.Po
include ./$(DEPDIR)/test-aux-xpathmakeabs.Po
include ./$(DEPDIR)/test-aux-xstrassign.Po
include ./$(DEPDIR)/test-aux-xstrbuild.Po
include ./$(DEPDIR)/test-aux-xstrcasecmp.Po
include ./$(DEPDIR)/test-aux-xstrcaseeq.Po
include ./$(DEPDIR)/test-aux-xstrhasprefix.Po
include ./$(DEPDIR)/test-aux-xstrhassuffix.Po
include ./$(DEPDIR)/test-aux-xstrispercent.Po
include ./$(DEPDIR)/test-aux-xstrsplit.Po
include ./$(DEPDIR)/test-aux-xstrstrip.Po
include ./$(DEPDIR)/test-aux-xstrtod.Po
include ./$(DEPDIR)/test-aux-xstrtodorpercent.Po
include ./$(DEPDIR)/test-aux-xstrtoll.Po
include ./$(DEPDIR)/test-aux-xurifromsrc.Po
include ./$(DEPDIR)/test-aux-xurigetcontents.Po
include ./$(DEPDIR)/xfail-test-Document-addObject.Po
include ./$(DEPDIR)/xfail-test-Ginga-getOptionBool.Po
include ./$(DEPDIR)/xfail-test-Ginga-getOptionInt.Po
include ./$(DEPDIR)/xfail-test-Ginga-getOptionString.Po
include ./$(DEPDIR)/xfail-test-Ginga-setOptionBool.Po
include ./$(DEPDIR)/xfail-test-Ginga-setOptionInt.Po
include ./$(DEPDIR)/xfail-test-Ginga-setOptionString.Po
include ./$(DEPDIR)/xfail-test-aux-xstrtod.Po

.cpp.o:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(AM_V_CXX_no)$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS) $(check_SCRIPTS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
xfail-test-aux-xstrtod.log: xfail-test-aux-xstrtod$(EXEEXT)
	@p='xfail-test-aux-xstrtod$(EXEEXT)'; \
	b='xfail-test-aux-xstrtod'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-aux-ginga-parse-bool.log: test-aux-ginga-parse-bool$(EXEEXT)
	@p='test-aux-ginga-parse-bool$(EXEEXT)'; \
	b='test-aux-ginga-parse-bool'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-aux-ginga-parse-color.log: test-aux-ginga-parse-color$(EXEEXT)
	@p='test-aux-ginga-parse-color$(EXEEXT)'; \
	b='test-aux-ginga-parse-color'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-aux-ginga-parse-list.log: test-aux-ginga-parse-list$(EXEEXT)
	@p='test-aux-ginga-parse-list$(EXEEXT)'; \
	b='test-aux-ginga-parse-list'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-aux-ginga-parse-table.log: test-aux-ginga-parse-table$(EXEEXT)
	@p='test-aux-ginga-parse-table$(EXEEXT)'; \
	b='test-aux-ginga-parse-table'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-aux-ginga-parse-percent.log: test-aux-ginga-parse-percent$(EXEEXT)
	@p='test-aux-ginga-parse-percent$(EXEEXT)'; \
	b='test-aux-ginga-parse-percent'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-aux-ginga-parse-time.log: test-aux-ginga-parse-time$(EXEEXT)
	@p='test-aux-ginga-parse-time$(EXEEXT)'; \
	b='test-aux-ginga-parse-time'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-aux-xstrispercent.log: test-aux-xstrispercent$(EXEEXT)
	@p='test-aux-xstrispercent$(EXEEXT)'; \
	b='test-aux-xstrispercent'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-aux-xstrtodorpercent.log: test-aux-xstrtodorpercent$(EXEEXT)
	@p='test-aux-xstrtodorpercent$(EXEEXT)'; \
	b='test-aux-xstrtodorpercent'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-aux-xstrcasecmp.log: test-aux-xstrcasecmp$(EXEEXT)
	@p='test-aux-xstrcasecmp$(EXEEXT)'; \
	b='test-aux-xstrcasecmp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-aux-xstrcaseeq.log: test-aux-xstrcaseeq$(EXEEXT)
	@p='test-aux-xstrcaseeq$(EXEEXT)'; \
	b='test-aux-xstrcaseeq'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-aux-xstrhasprefix.log: test-aux-xstrhasprefix$(EXEEXT)
	@p='test-aux-xstrhasprefix$(EXEEXT)'; \
	b='test-aux-xstrhasprefix'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-aux-xstrhassuffix.log: test-aux-xstrhassuffix$(EXEEXT)
	@p='test-aux-xstrhassuffix$(EXEEXT)'; \
	b='test-aux-xstrhassuffix'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-aux-xstrstrip.log: test-aux-xstrstrip$(EXEEXT)
	@p='test-aux-xstrstrip$(EXEEXT)'; \
	b='test-aux-xstrstrip'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-aux-xstrsplit.log: test-aux-xstrsplit$(EXEEXT)
	@p='test-aux-xstrsplit$(EXEEXT)'; \
	b='test-aux-xstrsplit'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-aux-xpathbasename.log: test-aux-xpathbasename$(EXEEXT)
	@p='test-aux-xpathbasename$(EXEEXT)'; \
	b='test-aux-xpathbasename'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-aux-xpathdirname.log: test-aux-xpathdirname$(EXEEXT)
	@p='test-aux-xpathdirname$(EXEEXT)'; \
	b='test-aux-xpathdirname'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-aux-xpathisabs.log: test-aux-xpathisabs$(EXEEXT)
	@p='test-aux-xpathisabs$(EXEEXT)'; \
	b='test-aux-xpathisabs'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-aux-xpathisuri.log: test-aux-xpathisuri$(EXEEXT)
	@p='test-aux-xpathisuri$(EXEEXT)'; \
	b='test-aux-xpathisuri'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-aux-xpathmakeabs.log: test-aux-xpathmakeabs$(EXEEXT)
	@p='test-aux-xpathmakeabs$(EXEEXT)'; \
	b='test-aux-xpathmakeabs'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-aux-xpathbuild.log: test-aux-xpathbuild$(EXEEXT)
	@p='test-aux-xpathbuild$(EXEEXT)'; \
	b='test-aux-xpathbuild'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-aux-xpathbuildabs.log: test-aux-xpathbuildabs$(EXEEXT)
	@p='test-aux-xpathbuildabs$(EXEEXT)'; \
	b='test-aux-xpathbuildabs'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-aux-xpathfromuri.log: test-aux-xpathfromuri$(EXEEXT)
	@p='test-aux-xpathfromuri$(EXEEXT)'; \
	b='test-aux-xpathfromuri'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-aux-xstrtod.log: test-aux-xstrtod$(EXEEXT)
	@p='test-aux-xstrtod$(EXEEXT)'; \
	b='test-aux-xstrtod'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-aux-xstrtoll.log: test-aux-xstrtoll$(EXEEXT)
	@p='test-aux-xstrtoll$(EXEEXT)'; \
	b='test-aux-xstrtoll'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-aux-xstrassign.log: test-aux-xstrassign$(EXEEXT)
	@p='test-aux-xstrassign$(EXEEXT)'; \
	b='test-aux-xstrassign'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-aux-xstrbuild.log: test-aux-xstrbuild$(EXEEXT)
	@p='test-aux-xstrbuild$(EXEEXT)'; \
	b='test-aux-xstrbuild'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-aux-xurigetcontents.log: test-aux-xurigetcontents$(EXEEXT)
	@p='test-aux-xurigetcontents$(EXEEXT)'; \
	b='test-aux-xurigetcontents'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-aux-xurifromsrc.log: test-aux-xurifromsrc$(EXEEXT)
	@p='test-aux-xurifromsrc$(EXEEXT)'; \
	b='test-aux-xurifromsrc'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Document-new.log: test-Document-new$(EXEEXT)
	@p='test-Document-new$(EXEEXT)'; \
	b='test-Document-new'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Document-addObject.log: test-Document-addObject$(EXEEXT)
	@p='test-Document-addObject$(EXEEXT)'; \
	b='test-Document-addObject'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
xfail-test-Document-addObject.log: xfail-test-Document-addObject$(EXEEXT)
	@p='xfail-test-Document-addObject$(EXEEXT)'; \
	b='xfail-test-Document-addObject'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Document-getObjectById.log: test-Document-getObjectById$(EXEEXT)
	@p='test-Document-getObjectById$(EXEEXT)'; \
	b='test-Document-getObjectById'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Document-getObjectByIdOrAlias.log: test-Document-getObjectByIdOrAlias$(EXEEXT)
	@p='test-Document-getObjectByIdOrAlias$(EXEEXT)'; \
	b='test-Document-getObjectByIdOrAlias'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Predicate-new.log: test-Predicate-new$(EXEEXT)
	@p='test-Predicate-new$(EXEEXT)'; \
	b='test-Predicate-new'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Predicate-atom.log: test-Predicate-atom$(EXEEXT)
	@p='test-Predicate-atom$(EXEEXT)'; \
	b='test-Predicate-atom'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Event-new.log: test-Event-new$(EXEEXT)
	@p='test-Event-new$(EXEEXT)'; \
	b='test-Event-new'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Event-isLambda.log: test-Event-isLambda$(EXEEXT)
	@p='test-Event-isLambda$(EXEEXT)'; \
	b='test-Event-isLambda'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Event-setInterval.log: test-Event-setInterval$(EXEEXT)
	@p='test-Event-setInterval$(EXEEXT)'; \
	b='test-Event-setInterval'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Event-setParameter.log: test-Event-setParameter$(EXEEXT)
	@p='test-Event-setParameter$(EXEEXT)'; \
	b='test-Event-setParameter'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Event-getEventTypeAsString.log: test-Event-getEventTypeAsString$(EXEEXT)
	@p='test-Event-getEventTypeAsString$(EXEEXT)'; \
	b='test-Event-getEventTypeAsString'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Event-getEventStateAsString.log: test-Event-getEventStateAsString$(EXEEXT)
	@p='test-Event-getEventStateAsString$(EXEEXT)'; \
	b='test-Event-getEventStateAsString'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Event-getEventTransitionAsString.log: test-Event-getEventTransitionAsString$(EXEEXT)
	@p='test-Event-getEventTransitionAsString$(EXEEXT)'; \
	b='test-Event-getEventTransitionAsString'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Event-transition-Media-START.log: test-Event-transition-Media-START$(EXEEXT)
	@p='test-Event-transition-Media-START$(EXEEXT)'; \
	b='test-Event-transition-Media-START'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Event-transition-Context-START.log: test-Event-transition-Context-START$(EXEEXT)
	@p='test-Event-transition-Context-START$(EXEEXT)'; \
	b='test-Event-transition-Context-START'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Event-transition-Media-STOP.log: test-Event-transition-Media-STOP$(EXEEXT)
	@p='test-Event-transition-Media-STOP$(EXEEXT)'; \
	b='test-Event-transition-Media-STOP'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Event-transition-Context-STOP.log: test-Event-transition-Context-STOP$(EXEEXT)
	@p='test-Event-transition-Context-STOP$(EXEEXT)'; \
	b='test-Event-transition-Context-STOP'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Event-transition-Media-ABORT.log: test-Event-transition-Media-ABORT$(EXEEXT)
	@p='test-Event-transition-Media-ABORT$(EXEEXT)'; \
	b='test-Event-transition-Media-ABORT'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Event-transition-Context-ABORT.log: test-Event-transition-Context-ABORT$(EXEEXT)
	@p='test-Event-transition-Context-ABORT$(EXEEXT)'; \
	b='test-Event-transition-Context-ABORT'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Event-transition-Media-PAUSE.log: test-Event-transition-Media-PAUSE$(EXEEXT)
	@p='test-Event-transition-Media-PAUSE$(EXEEXT)'; \
	b='test-Event-transition-Media-PAUSE'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Event-transition-Context-PAUSE.log: test-Event-transition-Context-PAUSE$(EXEEXT)
	@p='test-Event-transition-Context-PAUSE$(EXEEXT)'; \
	b='test-Event-transition-Context-PAUSE'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Event-transition-Media-RESUME.log: test-Event-transition-Media-RESUME$(EXEEXT)
	@p='test-Event-transition-Media-RESUME$(EXEEXT)'; \
	b='test-Event-transition-Media-RESUME'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Event-transition-Context-RESUME.log: test-Event-transition-Context-RESUME$(EXEEXT)
	@p='test-Event-transition-Context-RESUME$(EXEEXT)'; \
	b='test-Event-transition-Context-RESUME'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Object-addAlias.log: test-Object-addAlias$(EXEEXT)
	@p='test-Object-addAlias$(EXEEXT)'; \
	b='test-Object-addAlias'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Object-addEvent.log: test-Object-addEvent$(EXEEXT)
	@p='test-Object-addEvent$(EXEEXT)'; \
	b='test-Object-addEvent'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Media-new.log: test-Media-new$(EXEEXT)
	@p='test-Media-new$(EXEEXT)'; \
	b='test-Media-new'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Media-explicitDur.log: test-Media-explicitDur$(EXEEXT)
	@p='test-Media-explicitDur$(EXEEXT)'; \
	b='test-Media-explicitDur'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Media-nested-explicitDur.log: test-Media-nested-explicitDur$(EXEEXT)
	@p='test-Media-nested-explicitDur$(EXEEXT)'; \
	b='test-Media-nested-explicitDur'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-MediaSettings-new.log: test-MediaSettings-new$(EXEEXT)
	@p='test-MediaSettings-new$(EXEEXT)'; \
	b='test-MediaSettings-new'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Context-new.log: test-Context-new$(EXEEXT)
	@p='test-Context-new$(EXEEXT)'; \
	b='test-Context-new'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Context-naturalend.log: test-Context-naturalend$(EXEEXT)
	@p='test-Context-naturalend$(EXEEXT)'; \
	b='test-Context-naturalend'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Context-nested-naturalend.log: test-Context-nested-naturalend$(EXEEXT)
	@p='test-Context-nested-naturalend$(EXEEXT)'; \
	b='test-Context-nested-naturalend'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Switch-new.log: test-Switch-new$(EXEEXT)
	@p='test-Switch-new$(EXEEXT)'; \
	b='test-Switch-new'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Parser-parseFile.log: test-Parser-parseFile$(EXEEXT)
	@p='test-Parser-parseFile$(EXEEXT)'; \
	b='test-Parser-parseFile'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Parser-parseBuffer.log: test-Parser-parseBuffer$(EXEEXT)
	@p='test-Parser-parseBuffer$(EXEEXT)'; \
	b='test-Parser-parseBuffer'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-ParserLua-parseBuffer.log: test-ParserLua-parseBuffer$(EXEEXT)
	@p='test-ParserLua-parseBuffer$(EXEEXT)'; \
	b='test-ParserLua-parseBuffer'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Ginga-version.log: test-Ginga-version$(EXEEXT)
	@p='test-Ginga-version$(EXEEXT)'; \
	b='test-Ginga-version'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Ginga-create.log: test-Ginga-create$(EXEEXT)
	@p='test-Ginga-create$(EXEEXT)'; \
	b='test-Ginga-create'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Ginga-getState.log: test-Ginga-getState$(EXEEXT)
	@p='test-Ginga-getState$(EXEEXT)'; \
	b='test-Ginga-getState'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Ginga-getOptions.log: test-Ginga-getOptions$(EXEEXT)
	@p='test-Ginga-getOptions$(EXEEXT)'; \
	b='test-Ginga-getOptions'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Ginga-getOptionBool.log: test-Ginga-getOptionBool$(EXEEXT)
	@p='test-Ginga-getOptionBool$(EXEEXT)'; \
	b='test-Ginga-getOptionBool'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Ginga-setOptionBool.log: test-Ginga-setOptionBool$(EXEEXT)
	@p='test-Ginga-setOptionBool$(EXEEXT)'; \
	b='test-Ginga-setOptionBool'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
xfail-test-Ginga-getOptionBool.log: xfail-test-Ginga-getOptionBool$(EXEEXT)
	@p='xfail-test-Ginga-getOptionBool$(EXEEXT)'; \
	b='xfail-test-Ginga-getOptionBool'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
xfail-test-Ginga-setOptionBool.log: xfail-test-Ginga-setOptionBool$(EXEEXT)
	@p='xfail-test-Ginga-setOptionBool$(EXEEXT)'; \
	b='xfail-test-Ginga-setOptionBool'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Ginga-getOptionInt.log: test-Ginga-getOptionInt$(EXEEXT)
	@p='test-Ginga-getOptionInt$(EXEEXT)'; \
	b='test-Ginga-getOptionInt'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Ginga-setOptionInt.log: test-Ginga-setOptionInt$(EXEEXT)
	@p='test-Ginga-setOptionInt$(EXEEXT)'; \
	b='test-Ginga-setOptionInt'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
xfail-test-Ginga-getOptionInt.log: xfail-test-Ginga-getOptionInt$(EXEEXT)
	@p='xfail-test-Ginga-getOptionInt$(EXEEXT)'; \
	b='xfail-test-Ginga-getOptionInt'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
xfail-test-Ginga-setOptionInt.log: xfail-test-Ginga-setOptionInt$(EXEEXT)
	@p='xfail-test-Ginga-setOptionInt$(EXEEXT)'; \
	b='xfail-test-Ginga-setOptionInt'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Ginga-getOptionString.log: test-Ginga-getOptionString$(EXEEXT)
	@p='test-Ginga-getOptionString$(EXEEXT)'; \
	b='test-Ginga-getOptionString'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-Ginga-setOptionString.log: test-Ginga-setOptionString$(EXEEXT)
	@p='test-Ginga-setOptionString$(EXEEXT)'; \
	b='test-Ginga-setOptionString'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
xfail-test-Ginga-getOptionString.log: xfail-test-Ginga-getOptionString$(EXEEXT)
	@p='xfail-test-Ginga-getOptionString$(EXEEXT)'; \
	b='xfail-test-Ginga-getOptionString'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
xfail-test-Ginga-setOptionString.log: xfail-test-Ginga-setOptionString$(EXEEXT)
	@p='xfail-test-Ginga-setOptionString$(EXEEXT)'; \
	b='xfail-test-Ginga-setOptionString'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.ncl.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(NCL_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_NCL_LOG_DRIVER_FLAGS) $(NCL_LOG_DRIVER_FLAGS) -- $(NCL_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
#.ncl$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(NCL_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(AM_NCL_LOG_DRIVER_FLAGS) $(NCL_LOG_DRIVER_FLAGS) -- $(NCL_LOG_COMPILE) \
#	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) $(check_SCRIPTS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(PROGRAMS) $(SCRIPTS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstPROGRAMS cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am recheck tags tags-am uninstall \
	uninstall-am

.PRECIOUS: Makefile


# Local Variables:
# mode: makefile
# End:

$(builddir)/env.sh:
	$(AM_V_GEN)cat $(builddir)/Makefile\
	  | $(PERL) -00 -wnle '$(perl_env_sh_get_tests_environment)'\
	  | $(PERL) -wple '$(perl_env_sh_expand_variables)'\
	  | $(PERL) -wnle '$(perl_env_sh_remove_ld_preload)' > $@

$(builddir)/env.csh: $(builddir)/env.sh
	$(AM_V_GEN)cat $(builddir)/env.sh\
	  | $(PERL) -wple '$(perl_env_csh_replace_env_sh)' > $@

$(builddir)/gdb.cfg: $(builddir)/env.sh
	$(AM_V_GEN)cat $(builddir)/env.sh\
	  | $(PERL) -wple '$(perl_gdb_cfg_replace_env_sh)' > $@

# Local Variables:
# mode: makefile
# End:
#$(builddir)/suppfile: $(srcdir)/suppfile.m4
#	$(AM_V_GEN)$(M4) $(srcdir)/suppfile.m4 > $@

# Local Variables:
# mode: makefile
# End:

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
